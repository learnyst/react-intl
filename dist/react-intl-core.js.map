{"version":3,"file":"react-intl-core.js","sources":["../lib/define-messages.js","../node_modules/intl-messageformat-parser/lib/types.js","../node_modules/intl-messageformat-parser/lib/parser.js","../node_modules/intl-messageformat/lib/formatters.js","../node_modules/intl-format-cache/lib/index.js","../node_modules/intl-messageformat/lib/core.js","../lib/utils.js","../lib/components/injectIntl.js","../lib/components/createFormattedComponent.js","../lib/components/useIntl.js","../node_modules/tslib/tslib.es6.js","../lib/format.js","../node_modules/intl-locales-supported/lib/index.js","../lib/components/provider.js","../lib/components/relative.js","../lib/components/plural.js","../lib/components/message.js","../lib/components/html-message.js","../lib/core.js"],"sourcesContent":["export default function defineMessages(messageDescriptors) {\n    // This simply returns what's passed-in because it's meant to be a hook for\n    // babel-plugin-react-intl.\n    return messageDescriptors;\n}\n","export var TYPE;\n(function (TYPE) {\n    /**\n     * Raw text\n     */\n    TYPE[TYPE[\"literal\"] = 0] = \"literal\";\n    /**\n     * Variable w/o any format, e.g `var` in `this is a {var}`\n     */\n    TYPE[TYPE[\"argument\"] = 1] = \"argument\";\n    /**\n     * Variable w/ number format\n     */\n    TYPE[TYPE[\"number\"] = 2] = \"number\";\n    /**\n     * Variable w/ date format\n     */\n    TYPE[TYPE[\"date\"] = 3] = \"date\";\n    /**\n     * Variable w/ time format\n     */\n    TYPE[TYPE[\"time\"] = 4] = \"time\";\n    /**\n     * Variable w/ select format\n     */\n    TYPE[TYPE[\"select\"] = 5] = \"select\";\n    /**\n     * Variable w/ plural format\n     */\n    TYPE[TYPE[\"plural\"] = 6] = \"plural\";\n})(TYPE || (TYPE = {}));\n/**\n * Type Guards\n */\nexport function isLiteralElement(el) {\n    return el.type === TYPE.literal;\n}\nexport function isArgumentElement(el) {\n    return el.type === TYPE.argument;\n}\nexport function isNumberElement(el) {\n    return el.type === TYPE.number;\n}\nexport function isDateElement(el) {\n    return el.type === TYPE.date;\n}\nexport function isTimeElement(el) {\n    return el.type === TYPE.time;\n}\nexport function isSelectElement(el) {\n    return el.type === TYPE.select;\n}\nexport function isPluralElement(el) {\n    return el.type === TYPE.plural;\n}\nexport function isNumberSkeleton(el) {\n    return el.type === 0 /* number */;\n}\nexport function isDateSkeleton(el) {\n    return el.type === 1 /* date */;\n}\nexport function createLiteralElement(value) {\n    return {\n        type: TYPE.literal,\n        value: value\n    };\n}\nexport function createNumberElement(value, style) {\n    return {\n        type: TYPE.number,\n        value: value,\n        style: style\n    };\n}\n","// tslint:disable:only-arrow-functions\n// tslint:disable:object-literal-shorthand\n// tslint:disable:trailing-comma\n// tslint:disable:object-literal-sort-keys\n// tslint:disable:one-variable-per-declaration\n// tslint:disable:max-line-length\n// tslint:disable:no-consecutive-blank-lines\n// tslint:disable:align\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n// Generated by PEG.js v. 0.10.0 (ts-pegjs plugin v. 0.2.5 )\n//\n// https://pegjs.org/   https://github.com/metadevpro/ts-pegjs\nimport { TYPE, } from './types';\nvar SyntaxError = /** @class */ (function (_super) {\n    __extends(SyntaxError, _super);\n    function SyntaxError(message, expected, found, location) {\n        var _this = _super.call(this) || this;\n        _this.message = message;\n        _this.expected = expected;\n        _this.found = found;\n        _this.location = location;\n        _this.name = \"SyntaxError\";\n        if (typeof Error.captureStackTrace === \"function\") {\n            Error.captureStackTrace(_this, SyntaxError);\n        }\n        return _this;\n    }\n    SyntaxError.buildMessage = function (expected, found) {\n        function hex(ch) {\n            return ch.charCodeAt(0).toString(16).toUpperCase();\n        }\n        function literalEscape(s) {\n            return s\n                .replace(/\\\\/g, \"\\\\\\\\\")\n                .replace(/\"/g, \"\\\\\\\"\")\n                .replace(/\\0/g, \"\\\\0\")\n                .replace(/\\t/g, \"\\\\t\")\n                .replace(/\\n/g, \"\\\\n\")\n                .replace(/\\r/g, \"\\\\r\")\n                .replace(/[\\x00-\\x0F]/g, function (ch) { return \"\\\\x0\" + hex(ch); })\n                .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) { return \"\\\\x\" + hex(ch); });\n        }\n        function classEscape(s) {\n            return s\n                .replace(/\\\\/g, \"\\\\\\\\\")\n                .replace(/\\]/g, \"\\\\]\")\n                .replace(/\\^/g, \"\\\\^\")\n                .replace(/-/g, \"\\\\-\")\n                .replace(/\\0/g, \"\\\\0\")\n                .replace(/\\t/g, \"\\\\t\")\n                .replace(/\\n/g, \"\\\\n\")\n                .replace(/\\r/g, \"\\\\r\")\n                .replace(/[\\x00-\\x0F]/g, function (ch) { return \"\\\\x0\" + hex(ch); })\n                .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) { return \"\\\\x\" + hex(ch); });\n        }\n        function describeExpectation(expectation) {\n            switch (expectation.type) {\n                case \"literal\":\n                    return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n                case \"class\":\n                    var escapedParts = expectation.parts.map(function (part) {\n                        return Array.isArray(part)\n                            ? classEscape(part[0]) + \"-\" + classEscape(part[1])\n                            : classEscape(part);\n                    });\n                    return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n                case \"any\":\n                    return \"any character\";\n                case \"end\":\n                    return \"end of input\";\n                case \"other\":\n                    return expectation.description;\n            }\n        }\n        function describeExpected(expected1) {\n            var descriptions = expected1.map(describeExpectation);\n            var i;\n            var j;\n            descriptions.sort();\n            if (descriptions.length > 0) {\n                for (i = 1, j = 1; i < descriptions.length; i++) {\n                    if (descriptions[i - 1] !== descriptions[i]) {\n                        descriptions[j] = descriptions[i];\n                        j++;\n                    }\n                }\n                descriptions.length = j;\n            }\n            switch (descriptions.length) {\n                case 1:\n                    return descriptions[0];\n                case 2:\n                    return descriptions[0] + \" or \" + descriptions[1];\n                default:\n                    return descriptions.slice(0, -1).join(\", \")\n                        + \", or \"\n                        + descriptions[descriptions.length - 1];\n            }\n        }\n        function describeFound(found1) {\n            return found1 ? \"\\\"\" + literalEscape(found1) + \"\\\"\" : \"end of input\";\n        }\n        return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n    };\n    return SyntaxError;\n}(Error));\nexport { SyntaxError };\nfunction peg$parse(input, options) {\n    options = options !== undefined ? options : {};\n    var peg$FAILED = {};\n    var peg$startRuleFunctions = { start: peg$parsestart };\n    var peg$startRuleFunction = peg$parsestart;\n    var peg$c0 = function (parts) {\n        return parts.join('');\n    };\n    var peg$c1 = function (messageText) {\n        return __assign({ type: TYPE.literal, value: messageText }, insertLocation());\n    };\n    var peg$c2 = peg$otherExpectation(\"argumentElement\");\n    var peg$c3 = \"{\";\n    var peg$c4 = peg$literalExpectation(\"{\", false);\n    var peg$c5 = \"}\";\n    var peg$c6 = peg$literalExpectation(\"}\", false);\n    var peg$c7 = function (value) {\n        return __assign({ type: TYPE.argument, value: value }, insertLocation());\n    };\n    var peg$c8 = peg$otherExpectation(\"numberSkeletonId\");\n    var peg$c9 = /^['\\/{}]/;\n    var peg$c10 = peg$classExpectation([\"'\", \"/\", \"{\", \"}\"], false, false);\n    var peg$c11 = peg$anyExpectation();\n    var peg$c12 = peg$otherExpectation(\"numberSkeletonTokenOption\");\n    var peg$c13 = \"/\";\n    var peg$c14 = peg$literalExpectation(\"/\", false);\n    var peg$c15 = function (option) { return option; };\n    var peg$c16 = peg$otherExpectation(\"numberSkeletonToken\");\n    var peg$c17 = function (stem, options) {\n        return { stem: stem, options: options };\n    };\n    var peg$c18 = function (tokens) {\n        return __assign({ type: 0 /* number */, tokens: tokens }, insertLocation());\n    };\n    var peg$c19 = \"::\";\n    var peg$c20 = peg$literalExpectation(\"::\", false);\n    var peg$c21 = function (skeleton) { return skeleton; };\n    var peg$c22 = function (style) { return style.replace(/\\s*$/, ''); };\n    var peg$c23 = \",\";\n    var peg$c24 = peg$literalExpectation(\",\", false);\n    var peg$c25 = \"number\";\n    var peg$c26 = peg$literalExpectation(\"number\", false);\n    var peg$c27 = function (value, type, style) {\n        return __assign({ type: type === 'number' ? TYPE.number : type === 'date' ? TYPE.date : TYPE.time, style: style && style[2], value: value }, insertLocation());\n    };\n    var peg$c28 = function (pattern) {\n        return __assign({ type: 1 /* date */, pattern: pattern }, insertLocation());\n    };\n    var peg$c29 = \"date\";\n    var peg$c30 = peg$literalExpectation(\"date\", false);\n    var peg$c31 = \"time\";\n    var peg$c32 = peg$literalExpectation(\"time\", false);\n    var peg$c33 = \"plural\";\n    var peg$c34 = peg$literalExpectation(\"plural\", false);\n    var peg$c35 = \"selectordinal\";\n    var peg$c36 = peg$literalExpectation(\"selectordinal\", false);\n    var peg$c37 = \"offset:\";\n    var peg$c38 = peg$literalExpectation(\"offset:\", false);\n    var peg$c39 = function (value, pluralType, offset, options) {\n        return __assign({ type: TYPE.plural, pluralType: pluralType === 'plural' ? 'cardinal' : 'ordinal', value: value, offset: offset ? offset[2] : 0, options: options.reduce(function (all, _a) {\n                var id = _a.id, value = _a.value, location = _a.location;\n                all[id] = {\n                    value: value,\n                    location: location\n                };\n                return all;\n            }, {}) }, insertLocation());\n    };\n    var peg$c40 = \"select\";\n    var peg$c41 = peg$literalExpectation(\"select\", false);\n    var peg$c42 = function (value, options) {\n        return __assign({ type: TYPE.select, value: value, options: options.reduce(function (all, _a) {\n                var id = _a.id, value = _a.value, location = _a.location;\n                all[id] = {\n                    value: value,\n                    location: location\n                };\n                return all;\n            }, {}) }, insertLocation());\n    };\n    var peg$c43 = \"=\";\n    var peg$c44 = peg$literalExpectation(\"=\", false);\n    var peg$c45 = function (id, value) {\n        return __assign({ id: id,\n            value: value }, insertLocation());\n    };\n    var peg$c46 = function (id, value) {\n        return __assign({ id: id,\n            value: value }, insertLocation());\n    };\n    var peg$c47 = /^[\\t-\\r \\x85\\u200E\\u200F\\u2028\\u2029]/;\n    var peg$c48 = peg$classExpectation([[\"\\t\", \"\\r\"], \" \", \"\\x85\", \"\\u200E\", \"\\u200F\", \"\\u2028\", \"\\u2029\"], false, false);\n    var peg$c49 = /^[!-\\/:-@[-\\^`{-~\\xA1-\\xA7\\xA9\\xAB\\xAC\\xAE\\xB0\\xB1\\xB6\\xBB\\xBF\\xD7\\xF7\\u2010-\\u2027\\u2030-\\u203E\\u2041-\\u2053\\u2055-\\u205E\\u2190-\\u245F\\u2500-\\u2775\\u2794-\\u2BFF\\u2E00-\\u2E7F\\u3001-\\u3003\\u3008-\\u3020\\u3030\\uFD3E\\uFD3F\\uFE45\\uFE46]/;\n    var peg$c50 = peg$classExpectation([[\"!\", \"/\"], [\":\", \"@\"], [\"[\", \"^\"], \"`\", [\"{\", \"~\"], [\"\\xA1\", \"\\xA7\"], \"\\xA9\", \"\\xAB\", \"\\xAC\", \"\\xAE\", \"\\xB0\", \"\\xB1\", \"\\xB6\", \"\\xBB\", \"\\xBF\", \"\\xD7\", \"\\xF7\", [\"\\u2010\", \"\\u2027\"], [\"\\u2030\", \"\\u203E\"], [\"\\u2041\", \"\\u2053\"], [\"\\u2055\", \"\\u205E\"], [\"\\u2190\", \"\\u245F\"], [\"\\u2500\", \"\\u2775\"], [\"\\u2794\", \"\\u2BFF\"], [\"\\u2E00\", \"\\u2E7F\"], [\"\\u3001\", \"\\u3003\"], [\"\\u3008\", \"\\u3020\"], \"\\u3030\", \"\\uFD3E\", \"\\uFD3F\", \"\\uFE45\", \"\\uFE46\"], false, false);\n    var peg$c51 = peg$otherExpectation(\"optional whitespace\");\n    var peg$c52 = /^[0-9]/;\n    var peg$c53 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n    var peg$c54 = function (digits) {\n        return parseInt(digits.join(''), 10);\n    };\n    var peg$c55 = peg$otherExpectation(\"apostrophe\");\n    var peg$c56 = \"'\";\n    var peg$c57 = peg$literalExpectation(\"'\", false);\n    var peg$c58 = peg$otherExpectation(\"double apostrophes\");\n    var peg$c59 = \"''\";\n    var peg$c60 = peg$literalExpectation(\"''\", false);\n    var peg$c61 = function () { return \"'\"; };\n    var peg$c62 = /^[{}]/;\n    var peg$c63 = peg$classExpectation([\"{\", \"}\"], false, false);\n    var peg$c64 = /^[^']/;\n    var peg$c65 = peg$classExpectation([\"'\"], true, false);\n    var peg$c66 = function (escapedChar, quotedChars) {\n        return escapedChar + quotedChars.replace(\"''\", \"'\");\n    };\n    var peg$c67 = /^[^{}]/;\n    var peg$c68 = peg$classExpectation([\"{\", \"}\"], true, false);\n    var peg$c69 = peg$otherExpectation(\"keyword\");\n    var peg$currPos = 0;\n    var peg$savedPos = 0;\n    var peg$posDetailsCache = [{ line: 1, column: 1 }];\n    var peg$maxFailPos = 0;\n    var peg$maxFailExpected = [];\n    var peg$silentFails = 0;\n    var peg$result;\n    if (options.startRule !== undefined) {\n        if (!(options.startRule in peg$startRuleFunctions)) {\n            throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n        }\n        peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n    function text() {\n        return input.substring(peg$savedPos, peg$currPos);\n    }\n    function location() {\n        return peg$computeLocation(peg$savedPos, peg$currPos);\n    }\n    function expected(description, location1) {\n        location1 = location1 !== undefined\n            ? location1\n            : peg$computeLocation(peg$savedPos, peg$currPos);\n        throw peg$buildStructuredError([peg$otherExpectation(description)], input.substring(peg$savedPos, peg$currPos), location1);\n    }\n    function error(message, location1) {\n        location1 = location1 !== undefined\n            ? location1\n            : peg$computeLocation(peg$savedPos, peg$currPos);\n        throw peg$buildSimpleError(message, location1);\n    }\n    function peg$literalExpectation(text1, ignoreCase) {\n        return { type: \"literal\", text: text1, ignoreCase: ignoreCase };\n    }\n    function peg$classExpectation(parts, inverted, ignoreCase) {\n        return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n    }\n    function peg$anyExpectation() {\n        return { type: \"any\" };\n    }\n    function peg$endExpectation() {\n        return { type: \"end\" };\n    }\n    function peg$otherExpectation(description) {\n        return { type: \"other\", description: description };\n    }\n    function peg$computePosDetails(pos) {\n        var details = peg$posDetailsCache[pos];\n        var p;\n        if (details) {\n            return details;\n        }\n        else {\n            p = pos - 1;\n            while (!peg$posDetailsCache[p]) {\n                p--;\n            }\n            details = peg$posDetailsCache[p];\n            details = {\n                line: details.line,\n                column: details.column\n            };\n            while (p < pos) {\n                if (input.charCodeAt(p) === 10) {\n                    details.line++;\n                    details.column = 1;\n                }\n                else {\n                    details.column++;\n                }\n                p++;\n            }\n            peg$posDetailsCache[pos] = details;\n            return details;\n        }\n    }\n    function peg$computeLocation(startPos, endPos) {\n        var startPosDetails = peg$computePosDetails(startPos);\n        var endPosDetails = peg$computePosDetails(endPos);\n        return {\n            start: {\n                offset: startPos,\n                line: startPosDetails.line,\n                column: startPosDetails.column\n            },\n            end: {\n                offset: endPos,\n                line: endPosDetails.line,\n                column: endPosDetails.column\n            }\n        };\n    }\n    function peg$fail(expected1) {\n        if (peg$currPos < peg$maxFailPos) {\n            return;\n        }\n        if (peg$currPos > peg$maxFailPos) {\n            peg$maxFailPos = peg$currPos;\n            peg$maxFailExpected = [];\n        }\n        peg$maxFailExpected.push(expected1);\n    }\n    function peg$buildSimpleError(message, location1) {\n        return new SyntaxError(message, [], \"\", location1);\n    }\n    function peg$buildStructuredError(expected1, found, location1) {\n        return new SyntaxError(SyntaxError.buildMessage(expected1, found), expected1, found, location1);\n    }\n    function peg$parsestart() {\n        var s0;\n        s0 = peg$parsemessage();\n        return s0;\n    }\n    function peg$parsemessage() {\n        var s0, s1;\n        s0 = [];\n        s1 = peg$parsemessageElement();\n        while (s1 !== peg$FAILED) {\n            s0.push(s1);\n            s1 = peg$parsemessageElement();\n        }\n        return s0;\n    }\n    function peg$parsemessageElement() {\n        var s0;\n        s0 = peg$parseliteralElement();\n        if (s0 === peg$FAILED) {\n            s0 = peg$parseargumentElement();\n            if (s0 === peg$FAILED) {\n                s0 = peg$parsesimpleFormatElement();\n                if (s0 === peg$FAILED) {\n                    s0 = peg$parsepluralElement();\n                    if (s0 === peg$FAILED) {\n                        s0 = peg$parseselectElement();\n                    }\n                }\n            }\n        }\n        return s0;\n    }\n    function peg$parsemessageText() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parsedoubleApostrophes();\n        if (s2 === peg$FAILED) {\n            s2 = peg$parsequotedString();\n            if (s2 === peg$FAILED) {\n                s2 = peg$parseunquotedString();\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$parsedoubleApostrophes();\n                if (s2 === peg$FAILED) {\n                    s2 = peg$parsequotedString();\n                    if (s2 === peg$FAILED) {\n                        s2 = peg$parseunquotedString();\n                    }\n                }\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c0(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parseliteralElement() {\n        var s0, s1;\n        s0 = peg$currPos;\n        s1 = peg$parsemessageText();\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c1(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parseargName() {\n        var s0, s1;\n        s0 = peg$currPos;\n        s1 = peg$parsenumber();\n        if (s1 === peg$FAILED) {\n            s1 = peg$parsekeyword();\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        return s0;\n    }\n    function peg$parseargumentElement() {\n        var s0, s1, s2, s3, s4, s5;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c3;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c4);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargName();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 125) {\n                            s5 = peg$c5;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c6);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            peg$savedPos = s0;\n                            s1 = peg$c7(s3);\n                            s0 = s1;\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c2);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeletonId() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parsepatternWhiteSpace();\n        if (s4 === peg$FAILED) {\n            if (peg$c9.test(input.charAt(peg$currPos))) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c10);\n                }\n            }\n        }\n        peg$silentFails--;\n        if (s4 === peg$FAILED) {\n            s3 = undefined;\n        }\n        else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c11);\n                }\n            }\n            if (s4 !== peg$FAILED) {\n                s3 = [s3, s4];\n                s2 = s3;\n            }\n            else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$currPos;\n                s3 = peg$currPos;\n                peg$silentFails++;\n                s4 = peg$parsepatternWhiteSpace();\n                if (s4 === peg$FAILED) {\n                    if (peg$c9.test(input.charAt(peg$currPos))) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c10);\n                        }\n                    }\n                }\n                peg$silentFails--;\n                if (s4 === peg$FAILED) {\n                    s3 = undefined;\n                }\n                else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                }\n                if (s3 !== peg$FAILED) {\n                    if (input.length > peg$currPos) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c11);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        s3 = [s3, s4];\n                        s2 = s3;\n                    }\n                    else {\n                        peg$currPos = s2;\n                        s2 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s2;\n                    s2 = peg$FAILED;\n                }\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c8);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeletonTokenOption() {\n        var s0, s1, s2;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 47) {\n            s1 = peg$c13;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c14);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsenumberSkeletonId();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c15(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c12);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeletonToken() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsenumberSkeletonId();\n            if (s2 !== peg$FAILED) {\n                s3 = [];\n                s4 = peg$parsenumberSkeletonTokenOption();\n                while (s4 !== peg$FAILED) {\n                    s3.push(s4);\n                    s4 = peg$parsenumberSkeletonTokenOption();\n                }\n                if (s3 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c17(s2, s3);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c16);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeleton() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parsenumberSkeletonToken();\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$parsenumberSkeletonToken();\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c18(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parsenumberArgStyle() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c19) {\n            s1 = peg$c19;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c20);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsenumberSkeleton();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c21(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parsemessageText();\n            if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c22(s1);\n            }\n            s0 = s1;\n        }\n        return s0;\n    }\n    function peg$parsenumberFormatElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c3;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c4);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargName();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c23;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c24);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 6) === peg$c25) {\n                                    s7 = peg$c25;\n                                    peg$currPos += 6;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c26);\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        s9 = peg$currPos;\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s10 = peg$c23;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s10 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c24);\n                                            }\n                                        }\n                                        if (s10 !== peg$FAILED) {\n                                            s11 = peg$parse_();\n                                            if (s11 !== peg$FAILED) {\n                                                s12 = peg$parsenumberArgStyle();\n                                                if (s12 !== peg$FAILED) {\n                                                    s10 = [s10, s11, s12];\n                                                    s9 = s10;\n                                                }\n                                                else {\n                                                    peg$currPos = s9;\n                                                    s9 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s9;\n                                                s9 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s9;\n                                            s9 = peg$FAILED;\n                                        }\n                                        if (s9 === peg$FAILED) {\n                                            s9 = null;\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                if (input.charCodeAt(peg$currPos) === 125) {\n                                                    s11 = peg$c5;\n                                                    peg$currPos++;\n                                                }\n                                                else {\n                                                    s11 = peg$FAILED;\n                                                    if (peg$silentFails === 0) {\n                                                        peg$fail(peg$c6);\n                                                    }\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    peg$savedPos = s0;\n                                                    s1 = peg$c27(s3, s7, s9);\n                                                    s0 = s1;\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsedateOrTimeSkeleton() {\n        var s0, s1;\n        s0 = peg$currPos;\n        s1 = peg$parsemessageText();\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c28(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parsedateOrTimeArgStyle() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c19) {\n            s1 = peg$c19;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c20);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsedateOrTimeSkeleton();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c21(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parsemessageText();\n            if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c22(s1);\n            }\n            s0 = s1;\n        }\n        return s0;\n    }\n    function peg$parsedateOrTimeFormatElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c3;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c4);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargName();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c23;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c24);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 4) === peg$c29) {\n                                    s7 = peg$c29;\n                                    peg$currPos += 4;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c30);\n                                    }\n                                }\n                                if (s7 === peg$FAILED) {\n                                    if (input.substr(peg$currPos, 4) === peg$c31) {\n                                        s7 = peg$c31;\n                                        peg$currPos += 4;\n                                    }\n                                    else {\n                                        s7 = peg$FAILED;\n                                        if (peg$silentFails === 0) {\n                                            peg$fail(peg$c32);\n                                        }\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        s9 = peg$currPos;\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s10 = peg$c23;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s10 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c24);\n                                            }\n                                        }\n                                        if (s10 !== peg$FAILED) {\n                                            s11 = peg$parse_();\n                                            if (s11 !== peg$FAILED) {\n                                                s12 = peg$parsedateOrTimeArgStyle();\n                                                if (s12 !== peg$FAILED) {\n                                                    s10 = [s10, s11, s12];\n                                                    s9 = s10;\n                                                }\n                                                else {\n                                                    peg$currPos = s9;\n                                                    s9 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s9;\n                                                s9 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s9;\n                                            s9 = peg$FAILED;\n                                        }\n                                        if (s9 === peg$FAILED) {\n                                            s9 = null;\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                if (input.charCodeAt(peg$currPos) === 125) {\n                                                    s11 = peg$c5;\n                                                    peg$currPos++;\n                                                }\n                                                else {\n                                                    s11 = peg$FAILED;\n                                                    if (peg$silentFails === 0) {\n                                                        peg$fail(peg$c6);\n                                                    }\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    peg$savedPos = s0;\n                                                    s1 = peg$c27(s3, s7, s9);\n                                                    s0 = s1;\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsesimpleFormatElement() {\n        var s0;\n        s0 = peg$parsenumberFormatElement();\n        if (s0 === peg$FAILED) {\n            s0 = peg$parsedateOrTimeFormatElement();\n        }\n        return s0;\n    }\n    function peg$parsepluralElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c3;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c4);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargName();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c23;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c24);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 6) === peg$c33) {\n                                    s7 = peg$c33;\n                                    peg$currPos += 6;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c34);\n                                    }\n                                }\n                                if (s7 === peg$FAILED) {\n                                    if (input.substr(peg$currPos, 13) === peg$c35) {\n                                        s7 = peg$c35;\n                                        peg$currPos += 13;\n                                    }\n                                    else {\n                                        s7 = peg$FAILED;\n                                        if (peg$silentFails === 0) {\n                                            peg$fail(peg$c36);\n                                        }\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s9 = peg$c23;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s9 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c24);\n                                            }\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                s11 = peg$currPos;\n                                                if (input.substr(peg$currPos, 7) === peg$c37) {\n                                                    s12 = peg$c37;\n                                                    peg$currPos += 7;\n                                                }\n                                                else {\n                                                    s12 = peg$FAILED;\n                                                    if (peg$silentFails === 0) {\n                                                        peg$fail(peg$c38);\n                                                    }\n                                                }\n                                                if (s12 !== peg$FAILED) {\n                                                    s13 = peg$parse_();\n                                                    if (s13 !== peg$FAILED) {\n                                                        s14 = peg$parsenumber();\n                                                        if (s14 !== peg$FAILED) {\n                                                            s12 = [s12, s13, s14];\n                                                            s11 = s12;\n                                                        }\n                                                        else {\n                                                            peg$currPos = s11;\n                                                            s11 = peg$FAILED;\n                                                        }\n                                                    }\n                                                    else {\n                                                        peg$currPos = s11;\n                                                        s11 = peg$FAILED;\n                                                    }\n                                                }\n                                                else {\n                                                    peg$currPos = s11;\n                                                    s11 = peg$FAILED;\n                                                }\n                                                if (s11 === peg$FAILED) {\n                                                    s11 = null;\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    s12 = peg$parse_();\n                                                    if (s12 !== peg$FAILED) {\n                                                        s13 = [];\n                                                        s14 = peg$parsepluralOption();\n                                                        if (s14 !== peg$FAILED) {\n                                                            while (s14 !== peg$FAILED) {\n                                                                s13.push(s14);\n                                                                s14 = peg$parsepluralOption();\n                                                            }\n                                                        }\n                                                        else {\n                                                            s13 = peg$FAILED;\n                                                        }\n                                                        if (s13 !== peg$FAILED) {\n                                                            s14 = peg$parse_();\n                                                            if (s14 !== peg$FAILED) {\n                                                                if (input.charCodeAt(peg$currPos) === 125) {\n                                                                    s15 = peg$c5;\n                                                                    peg$currPos++;\n                                                                }\n                                                                else {\n                                                                    s15 = peg$FAILED;\n                                                                    if (peg$silentFails === 0) {\n                                                                        peg$fail(peg$c6);\n                                                                    }\n                                                                }\n                                                                if (s15 !== peg$FAILED) {\n                                                                    peg$savedPos = s0;\n                                                                    s1 = peg$c39(s3, s7, s11, s13);\n                                                                    s0 = s1;\n                                                                }\n                                                                else {\n                                                                    peg$currPos = s0;\n                                                                    s0 = peg$FAILED;\n                                                                }\n                                                            }\n                                                            else {\n                                                                peg$currPos = s0;\n                                                                s0 = peg$FAILED;\n                                                            }\n                                                        }\n                                                        else {\n                                                            peg$currPos = s0;\n                                                            s0 = peg$FAILED;\n                                                        }\n                                                    }\n                                                    else {\n                                                        peg$currPos = s0;\n                                                        s0 = peg$FAILED;\n                                                    }\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseselectElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c3;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c4);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargName();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c23;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c24);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 6) === peg$c40) {\n                                    s7 = peg$c40;\n                                    peg$currPos += 6;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c41);\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s9 = peg$c23;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s9 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c24);\n                                            }\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                s11 = [];\n                                                s12 = peg$parseselectOption();\n                                                if (s12 !== peg$FAILED) {\n                                                    while (s12 !== peg$FAILED) {\n                                                        s11.push(s12);\n                                                        s12 = peg$parseselectOption();\n                                                    }\n                                                }\n                                                else {\n                                                    s11 = peg$FAILED;\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    s12 = peg$parse_();\n                                                    if (s12 !== peg$FAILED) {\n                                                        if (input.charCodeAt(peg$currPos) === 125) {\n                                                            s13 = peg$c5;\n                                                            peg$currPos++;\n                                                        }\n                                                        else {\n                                                            s13 = peg$FAILED;\n                                                            if (peg$silentFails === 0) {\n                                                                peg$fail(peg$c6);\n                                                            }\n                                                        }\n                                                        if (s13 !== peg$FAILED) {\n                                                            peg$savedPos = s0;\n                                                            s1 = peg$c42(s3, s11);\n                                                            s0 = s1;\n                                                        }\n                                                        else {\n                                                            peg$currPos = s0;\n                                                            s0 = peg$FAILED;\n                                                        }\n                                                    }\n                                                    else {\n                                                        peg$currPos = s0;\n                                                        s0 = peg$FAILED;\n                                                    }\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsepluralRuleSelectValue() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 61) {\n            s2 = peg$c43;\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c44);\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            s3 = peg$parsenumber();\n            if (s3 !== peg$FAILED) {\n                s2 = [s2, s3];\n                s1 = s2;\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$parsekeyword();\n        }\n        return s0;\n    }\n    function peg$parseselectOption() {\n        var s0, s1, s2, s3, s4, s5, s6;\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsekeyword();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parse_();\n                if (s3 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 123) {\n                        s4 = peg$c3;\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c4);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        s5 = peg$parsemessage();\n                        if (s5 !== peg$FAILED) {\n                            if (input.charCodeAt(peg$currPos) === 125) {\n                                s6 = peg$c5;\n                                peg$currPos++;\n                            }\n                            else {\n                                s6 = peg$FAILED;\n                                if (peg$silentFails === 0) {\n                                    peg$fail(peg$c6);\n                                }\n                            }\n                            if (s6 !== peg$FAILED) {\n                                peg$savedPos = s0;\n                                s1 = peg$c45(s2, s5);\n                                s0 = s1;\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsepluralOption() {\n        var s0, s1, s2, s3, s4, s5, s6;\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsepluralRuleSelectValue();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parse_();\n                if (s3 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 123) {\n                        s4 = peg$c3;\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c4);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        s5 = peg$parsemessage();\n                        if (s5 !== peg$FAILED) {\n                            if (input.charCodeAt(peg$currPos) === 125) {\n                                s6 = peg$c5;\n                                peg$currPos++;\n                            }\n                            else {\n                                s6 = peg$FAILED;\n                                if (peg$silentFails === 0) {\n                                    peg$fail(peg$c6);\n                                }\n                            }\n                            if (s6 !== peg$FAILED) {\n                                peg$savedPos = s0;\n                                s1 = peg$c46(s2, s5);\n                                s0 = s1;\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsepatternWhiteSpace() {\n        var s0;\n        if (peg$c47.test(input.charAt(peg$currPos))) {\n            s0 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c48);\n            }\n        }\n        return s0;\n    }\n    function peg$parsepatternSyntax() {\n        var s0;\n        if (peg$c49.test(input.charAt(peg$currPos))) {\n            s0 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c50);\n            }\n        }\n        return s0;\n    }\n    function peg$parse_() {\n        var s0, s1, s2;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parsepatternWhiteSpace();\n        while (s2 !== peg$FAILED) {\n            s1.push(s2);\n            s2 = peg$parsepatternWhiteSpace();\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c51);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumber() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        s1 = [];\n        if (peg$c52.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c53);\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                if (peg$c52.test(input.charAt(peg$currPos))) {\n                    s2 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s2 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c53);\n                    }\n                }\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c54(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parseapostrophe() {\n        var s0, s1;\n        peg$silentFails++;\n        if (input.charCodeAt(peg$currPos) === 39) {\n            s0 = peg$c56;\n            peg$currPos++;\n        }\n        else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c57);\n            }\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c55);\n            }\n        }\n        return s0;\n    }\n    function peg$parsedoubleApostrophes() {\n        var s0, s1;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c59) {\n            s1 = peg$c59;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c60);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c61();\n        }\n        s0 = s1;\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c58);\n            }\n        }\n        return s0;\n    }\n    function peg$parsequotedString() {\n        var s0, s1, s2, s3, s4, s5;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 39) {\n            s1 = peg$c56;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c57);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            if (peg$c62.test(input.charAt(peg$currPos))) {\n                s2 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c63);\n                }\n            }\n            if (s2 !== peg$FAILED) {\n                s3 = peg$currPos;\n                s4 = [];\n                if (input.substr(peg$currPos, 2) === peg$c59) {\n                    s5 = peg$c59;\n                    peg$currPos += 2;\n                }\n                else {\n                    s5 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c60);\n                    }\n                }\n                if (s5 === peg$FAILED) {\n                    if (peg$c64.test(input.charAt(peg$currPos))) {\n                        s5 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s5 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c65);\n                        }\n                    }\n                }\n                while (s5 !== peg$FAILED) {\n                    s4.push(s5);\n                    if (input.substr(peg$currPos, 2) === peg$c59) {\n                        s5 = peg$c59;\n                        peg$currPos += 2;\n                    }\n                    else {\n                        s5 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c60);\n                        }\n                    }\n                    if (s5 === peg$FAILED) {\n                        if (peg$c64.test(input.charAt(peg$currPos))) {\n                            s5 = input.charAt(peg$currPos);\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c65);\n                            }\n                        }\n                    }\n                }\n                if (s4 !== peg$FAILED) {\n                    s3 = input.substring(s3, peg$currPos);\n                }\n                else {\n                    s3 = s4;\n                }\n                if (s3 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 39) {\n                        s4 = peg$c56;\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c57);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c66(s2, s3);\n                        s0 = s1;\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseunquotedString() {\n        var s0, s1;\n        s0 = peg$currPos;\n        if (peg$c67.test(input.charAt(peg$currPos))) {\n            s1 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c68);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        return s0;\n    }\n    function peg$parsekeyword() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parsepatternWhiteSpace();\n        if (s4 === peg$FAILED) {\n            s4 = peg$parsepatternSyntax();\n        }\n        peg$silentFails--;\n        if (s4 === peg$FAILED) {\n            s3 = undefined;\n        }\n        else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c11);\n                }\n            }\n            if (s4 !== peg$FAILED) {\n                s3 = [s3, s4];\n                s2 = s3;\n            }\n            else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$currPos;\n                s3 = peg$currPos;\n                peg$silentFails++;\n                s4 = peg$parsepatternWhiteSpace();\n                if (s4 === peg$FAILED) {\n                    s4 = peg$parsepatternSyntax();\n                }\n                peg$silentFails--;\n                if (s4 === peg$FAILED) {\n                    s3 = undefined;\n                }\n                else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                }\n                if (s3 !== peg$FAILED) {\n                    if (input.length > peg$currPos) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c11);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        s3 = [s3, s4];\n                        s2 = s3;\n                    }\n                    else {\n                        peg$currPos = s2;\n                        s2 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s2;\n                    s2 = peg$FAILED;\n                }\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c69);\n            }\n        }\n        return s0;\n    }\n    function insertLocation() {\n        return options && options.captureLocation ? {\n            location: location()\n        } : {};\n    }\n    peg$result = peg$startRuleFunction();\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n        return peg$result;\n    }\n    else {\n        if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n            peg$fail(peg$endExpectation());\n        }\n        throw peg$buildStructuredError(peg$maxFailExpected, peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null, peg$maxFailPos < input.length\n            ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n            : peg$computeLocation(peg$maxFailPos, peg$maxFailPos));\n    }\n}\nexport var parse = peg$parse;\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isArgumentElement, isLiteralElement, isDateElement, isTimeElement, isNumberElement, isSelectElement, isPluralElement } from 'intl-messageformat-parser';\nvar ESCAPE_HASH_REGEX = /\\\\#/g;\nvar FormatError = /** @class */ (function (_super) {\n    __extends(FormatError, _super);\n    function FormatError(msg, variableId) {\n        var _this = _super.call(this, msg) || this;\n        _this.variableId = variableId;\n        return _this;\n    }\n    return FormatError;\n}(Error));\nfunction mergeLiteral(parts) {\n    if (parts.length < 2) {\n        return parts;\n    }\n    return parts.reduce(function (all, part) {\n        var lastPart = all[all.length - 1];\n        if (!lastPart ||\n            lastPart.type !== 0 /* literal */ ||\n            part.type !== 0 /* literal */) {\n            all.push(part);\n        }\n        else {\n            lastPart.value += part.value;\n        }\n        return all;\n    }, []);\n}\n// TODO(skeleton): add skeleton support\nexport function formatToParts(els, locales, formatters, formats, values, \n// For debugging\noriginalMessage) {\n    // Hot path for straight simple msg translations\n    if (els.length === 1 && isLiteralElement(els[0])) {\n        return [\n            {\n                type: 0 /* literal */,\n                value: els[0].value.replace(ESCAPE_HASH_REGEX, '#')\n            }\n        ];\n    }\n    var result = [];\n    for (var _i = 0, els_1 = els; _i < els_1.length; _i++) {\n        var el = els_1[_i];\n        // Exit early for string parts.\n        if (isLiteralElement(el)) {\n            result.push({\n                type: 0 /* literal */,\n                value: el.value.replace(ESCAPE_HASH_REGEX, '#')\n            });\n            continue;\n        }\n        var varName = el.value;\n        // Enforce that all required values are provided by the caller.\n        if (!(values && varName in values)) {\n            throw new FormatError(\"The intl string context variable \\\"\" + varName + \"\\\" was not provided to the string \\\"\" + originalMessage + \"\\\"\");\n        }\n        var value = values[varName];\n        if (isArgumentElement(el)) {\n            if (!value || typeof value === 'string' || typeof value === 'number') {\n                result.push({\n                    type: 0 /* literal */,\n                    value: typeof value === 'string' || typeof value === 'number'\n                        ? String(value)\n                        : ''\n                });\n            }\n            else {\n                result.push({\n                    type: 1 /* argument */,\n                    value: value\n                });\n            }\n            continue;\n        }\n        // Recursively format plural and select parts' option — which can be a\n        // nested pattern structure. The choosing of the option to use is\n        // abstracted-by and delegated-to the part helper object.\n        if (isDateElement(el)) {\n            var style = typeof el.style === 'string' ? formats.date[el.style] : undefined;\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getDateTimeFormat(locales, style)\n                    .format(value)\n            });\n            continue;\n        }\n        if (isTimeElement(el)) {\n            var style = typeof el.style === 'string' ? formats.time[el.style] : undefined;\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getDateTimeFormat(locales, style)\n                    .format(value)\n            });\n            continue;\n        }\n        if (isNumberElement(el)) {\n            var style = typeof el.style === 'string' ? formats.number[el.style] : undefined;\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getNumberFormat(locales, style)\n                    .format(value)\n            });\n            continue;\n        }\n        if (isSelectElement(el)) {\n            var opt = el.options[value] || el.options.other;\n            if (!opt) {\n                throw new RangeError(\"Invalid values for \\\"\" + el.value + \"\\\": \\\"\" + value + \"\\\". Options are \\\"\" + Object.keys(el.options).join('\", \"') + \"\\\"\");\n            }\n            result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values));\n            continue;\n        }\n        if (isPluralElement(el)) {\n            var opt = el.options[\"=\" + value];\n            if (!opt) {\n                var rule = formatters\n                    .getPluralRules(locales, { type: el.pluralType })\n                    .select(value - (el.offset || 0));\n                opt = el.options[rule] || el.options.other;\n            }\n            if (!opt) {\n                throw new RangeError(\"Invalid values for \\\"\" + el.value + \"\\\": \\\"\" + value + \"\\\". Options are \\\"\" + Object.keys(el.options).join('\", \"') + \"\\\"\");\n            }\n            result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values));\n            continue;\n        }\n    }\n    return mergeLiteral(result);\n}\nexport function formatToString(els, locales, formatters, formats, values, \n// For debugging\noriginalMessage) {\n    var parts = formatToParts(els, locales, formatters, formats, values, originalMessage);\n    // Hot path for straight simple msg translations\n    if (parts.length === 1) {\n        return parts[0].value;\n    }\n    return parts.reduce(function (all, part) { return (all += part.value); }, '');\n}\n// Singleton\nvar domParser;\nvar TOKEN_DELIMITER = '@@';\nvar TOKEN_REGEX = /@@(.*?)@@/g;\nvar counter = 0;\nfunction generateId() {\n    return Date.now() + \"_\" + ++counter;\n}\nfunction restoreRichPlaceholderMessage(text, objectParts) {\n    return text\n        .split(TOKEN_REGEX)\n        .filter(Boolean)\n        .map(function (c) { return objectParts[c] || c; });\n}\nexport function formatXMLMessage(els, locales, formatters, formats, values, \n// For debugging\noriginalMessage) {\n    var parts = formatToParts(els, locales, formatters, formats, values, originalMessage);\n    var objectParts = {};\n    var formattedMessage = parts.reduce(function (all, part) {\n        if (typeof part.value === 'string' || part.type === 0 /* literal */) {\n            return (all += part.value);\n        }\n        var id = generateId();\n        objectParts[id] = part.value;\n        return (all += \"\" + TOKEN_DELIMITER + id + TOKEN_DELIMITER);\n    }, '');\n    // Not designed to filter out aggressively\n    if (!~formattedMessage.indexOf('<')) {\n        return restoreRichPlaceholderMessage(formattedMessage, objectParts);\n    }\n    if (!values) {\n        throw new FormatError('Message has placeholders but no values was given');\n    }\n    if (typeof DOMParser === 'undefined') {\n        throw new FormatError('Cannot format XML message without DOMParser');\n    }\n    if (!domParser) {\n        domParser = new DOMParser();\n    }\n    // XML, not HTML since HTMl is strict about self-closing tag\n    var dom = domParser.parseFromString(\"<template>\" + formattedMessage + \"</template>\", 'application/xml');\n    if (dom.getElementsByTagName('parsererror').length) {\n        throw new FormatError(\"Malformed XML message \" + dom.getElementsByTagName('parsererror')[0].innerHTML);\n    }\n    var content = dom.firstChild;\n    if (!content) {\n        throw new FormatError(\"Malformed XML message \" + formattedMessage);\n    }\n    var tagsToFormat = Object.keys(values).filter(function (varName) { return !!dom.getElementsByTagName(varName).length; });\n    // No tags to format\n    if (!tagsToFormat.length) {\n        return restoreRichPlaceholderMessage(formattedMessage, objectParts);\n    }\n    var childNodes = Array.prototype.slice.call(content.childNodes);\n    return childNodes.reduce(function (reconstructedChunks, _a) {\n        var tagName = _a.tagName, outerHTML = _a.outerHTML, textContent = _a.textContent;\n        // Regular text\n        if (!tagName) {\n            var chunks = restoreRichPlaceholderMessage(textContent || '', objectParts);\n            return reconstructedChunks.concat(chunks);\n        }\n        // Legacy HTML\n        if (!values[tagName]) {\n            var chunks = restoreRichPlaceholderMessage(outerHTML, objectParts);\n            if (chunks.length === 1) {\n                return reconstructedChunks.concat([chunks[0]]);\n            }\n            return reconstructedChunks.concat(chunks);\n        }\n        // XML Tag replacement\n        var formatFnOrValue = values[tagName];\n        if (typeof formatFnOrValue === 'function') {\n            if (textContent == null) {\n                return reconstructedChunks.concat([\n                    formatFnOrValue(textContent || undefined)\n                ]);\n            }\n            var chunks = restoreRichPlaceholderMessage(textContent, objectParts);\n            return reconstructedChunks.concat([formatFnOrValue.apply(void 0, chunks)]);\n        }\n        return reconstructedChunks.concat([formatFnOrValue]);\n    }, []);\n}\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n// -- Utilities ----------------------------------------------------------------\nfunction getCacheId(inputs) {\n    return JSON.stringify(inputs.map(function (input) {\n        return input && typeof input === 'object' ? orderedProps(input) : input;\n    }));\n}\nfunction orderedProps(obj) {\n    return Object.keys(obj)\n        .sort()\n        .map(function (k) {\n        var _a;\n        return (_a = {}, _a[k] = obj[k], _a);\n    });\n}\nvar memoizeFormatConstructor = function (FormatConstructor, cache) {\n    if (cache === void 0) { cache = {}; }\n    return function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var cacheId = getCacheId(args);\n        var format = cacheId && cache[cacheId];\n        if (!format) {\n            format = new ((_a = FormatConstructor).bind.apply(_a, [void 0].concat(args)))();\n            if (cacheId) {\n                cache[cacheId] = format;\n            }\n        }\n        return format;\n    };\n};\nexport default memoizeFormatConstructor;\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { isArgumentElement, isLiteralElement, isDateElement, isTimeElement, isNumberElement, isSelectElement, isPluralElement } from 'intl-messageformat-parser';\nimport memoizeIntlConstructor from 'intl-format-cache';\nimport { formatToString, formatToParts, formatXMLMessage } from './formatters';\n// -- MessageFormat --------------------------------------------------------\nfunction resolveLocale(locales) {\n    if (typeof locales === 'string') {\n        locales = [locales];\n    }\n    try {\n        return Intl.NumberFormat.supportedLocalesOf(locales, {\n            // IE11 localeMatcher `lookup` seems to convert `en` -> `en-US`\n            // but not other browsers,\n            localeMatcher: 'best fit'\n        })[0];\n    }\n    catch (e) {\n        return IntlMessageFormat.defaultLocale;\n    }\n}\n// TODO(skeleton): add skeleton support\nfunction prewarmFormatters(els, locales, formatters, formats) {\n    els\n        .filter(function (el) { return !isArgumentElement(el) && !isLiteralElement(el); })\n        .forEach(function (el) {\n        // Recursively format plural and select parts' option — which can be a\n        // nested pattern structure. The choosing of the option to use is\n        // abstracted-by and delegated-to the part helper object.\n        if (isDateElement(el)) {\n            var style = typeof el.style === 'string' ? formats.date[el.style] : undefined;\n            formatters.getDateTimeFormat(locales, style);\n        }\n        if (isTimeElement(el)) {\n            var style = typeof el.style === 'string' ? formats.time[el.style] : undefined;\n            formatters.getDateTimeFormat(locales, style);\n        }\n        if (isNumberElement(el)) {\n            var style = typeof el.style === 'string' ? formats.number[el.style] : undefined;\n            formatters.getNumberFormat(locales, style);\n        }\n        if (isSelectElement(el)) {\n            Object.keys(el.options).forEach(function (id) {\n                return prewarmFormatters(el.options[id].value, locales, formatters, formats);\n            });\n        }\n        if (isPluralElement(el)) {\n            formatters.getPluralRules(locales, { type: el.pluralType });\n            Object.keys(el.options).forEach(function (id) {\n                return prewarmFormatters(el.options[id].value, locales, formatters, formats);\n            });\n        }\n    });\n}\nfunction mergeConfig(c1, c2) {\n    if (!c2) {\n        return c1;\n    }\n    return __assign({}, (c1 || {}), (c2 || {}), Object.keys(c1).reduce(function (all, k) {\n        all[k] = __assign({}, c1[k], (c2[k] || {}));\n        return all;\n    }, {}));\n}\nfunction mergeConfigs(defaultConfig, configs) {\n    if (!configs) {\n        return defaultConfig;\n    }\n    return Object.keys(defaultConfig).reduce(function (all, k) {\n        all[k] = mergeConfig(defaultConfig[k], configs[k]);\n        return all;\n    }, __assign({}, defaultConfig));\n}\nexport function createDefaultFormatters(cache) {\n    if (cache === void 0) { cache = {\n        number: {},\n        dateTime: {},\n        pluralRules: {}\n    }; }\n    return {\n        getNumberFormat: memoizeIntlConstructor(Intl.NumberFormat, cache.number),\n        getDateTimeFormat: memoizeIntlConstructor(Intl.DateTimeFormat, cache.dateTime),\n        getPluralRules: memoizeIntlConstructor(Intl.PluralRules, cache.pluralRules)\n    };\n}\nvar IntlMessageFormat = /** @class */ (function () {\n    function IntlMessageFormat(message, locales, overrideFormats, opts) {\n        var _this = this;\n        if (locales === void 0) { locales = IntlMessageFormat.defaultLocale; }\n        this.formatterCache = {\n            number: {},\n            dateTime: {},\n            pluralRules: {}\n        };\n        this.format = function (values) {\n            return formatToString(_this.ast, _this.locale, _this.formatters, _this.formats, values, _this.message);\n        };\n        this.formatToParts = function (values) {\n            return formatToParts(_this.ast, _this.locale, _this.formatters, _this.formats, values, _this.message);\n        };\n        this.formatXMLMessage = function (values) {\n            return formatXMLMessage(_this.ast, _this.locale, _this.formatters, _this.formats, values, _this.message);\n        };\n        this.resolvedOptions = function () { return ({ locale: _this.locale }); };\n        this.getAst = function () { return _this.ast; };\n        if (typeof message === 'string') {\n            this.message = message;\n            if (!IntlMessageFormat.__parse) {\n                throw new TypeError('IntlMessageFormat.__parse must be set to process `message` of type `string`');\n            }\n            // Parse string messages into an AST.\n            this.ast = IntlMessageFormat.__parse(message);\n        }\n        else {\n            this.ast = message;\n        }\n        if (!Array.isArray(this.ast)) {\n            throw new TypeError('A message must be provided as a String or AST.');\n        }\n        // Creates a new object with the specified `formats` merged with the default\n        // formats.\n        this.formats = mergeConfigs(IntlMessageFormat.formats, overrideFormats);\n        // Defined first because it's used to build the format pattern.\n        this.locale = resolveLocale(locales || []);\n        this.formatters =\n            (opts && opts.formatters) || createDefaultFormatters(this.formatterCache);\n        prewarmFormatters(this.ast, this.locale, this.formatters, this.formats);\n    }\n    IntlMessageFormat.defaultLocale = 'en';\n    IntlMessageFormat.__parse = undefined;\n    // Default format options used as the prototype of the `formats` provided to the\n    // constructor. These are used when constructing the internal Intl.NumberFormat\n    // and Intl.DateTimeFormat instances.\n    IntlMessageFormat.formats = {\n        number: {\n            currency: {\n                style: 'currency'\n            },\n            percent: {\n                style: 'percent'\n            }\n        },\n        date: {\n            short: {\n                month: 'numeric',\n                day: 'numeric',\n                year: '2-digit'\n            },\n            medium: {\n                month: 'short',\n                day: 'numeric',\n                year: 'numeric'\n            },\n            long: {\n                month: 'long',\n                day: 'numeric',\n                year: 'numeric'\n            },\n            full: {\n                weekday: 'long',\n                month: 'long',\n                day: 'numeric',\n                year: 'numeric'\n            }\n        },\n        time: {\n            short: {\n                hour: 'numeric',\n                minute: 'numeric'\n            },\n            medium: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric'\n            },\n            long: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                timeZoneName: 'short'\n            },\n            full: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                timeZoneName: 'short'\n            }\n        }\n    };\n    return IntlMessageFormat;\n}());\nexport { IntlMessageFormat };\nexport default IntlMessageFormat;\n","/*\nHTML escaping is the same as React's\n(on purpose.) Therefore, it has the following Copyright and Licensing:\n\nCopyright 2013-2014, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the LICENSE\nfile in the root directory of React's source tree.\n*/\nimport * as React from 'react';\nimport { IntlMessageFormat } from 'intl-messageformat/core';\nimport memoizeIntlConstructor from 'intl-format-cache';\nconst invariant = require('invariant');\nconst ESCAPED_CHARS = {\n    38: '&amp;',\n    62: '&gt;',\n    60: '&lt;',\n    34: '&quot;',\n    39: '&#x27;',\n};\nconst UNSAFE_CHARS_REGEX = /[&><\"']/g;\nexport function escape(str) {\n    return ('' + str).replace(UNSAFE_CHARS_REGEX, match => ESCAPED_CHARS[match.charCodeAt(0)]);\n}\nexport function filterProps(props, whitelist, defaults = {}) {\n    return whitelist.reduce((filtered, name) => {\n        if (props.hasOwnProperty(name)) {\n            filtered[name] = props[name];\n        }\n        else if (defaults.hasOwnProperty(name)) {\n            filtered[name] = defaults[name];\n        }\n        return filtered;\n    }, {});\n}\nexport function invariantIntlContext({ intl } = {}) {\n    invariant(intl, '[React Intl] Could not find required `intl` object. ' +\n        '<IntlProvider> needs to exist in the component ancestry.');\n}\nexport function createError(message, exception) {\n    const eMsg = exception ? `\\n${exception}` : '';\n    return `[React Intl] ${message}${eMsg}`;\n}\nexport function defaultErrorHandler(error) {\n    if (process.env.NODE_ENV !== 'production') {\n        console.error(error);\n    }\n}\nexport const DEFAULT_INTL_CONFIG = {\n    formats: {},\n    messages: {},\n    timeZone: undefined,\n    textComponent: React.Fragment,\n    defaultLocale: 'en',\n    defaultFormats: {},\n    onError: defaultErrorHandler,\n};\nexport function createIntlCache() {\n    return {\n        dateTime: {},\n        number: {},\n        message: {},\n        relativeTime: {},\n        pluralRules: {},\n    };\n}\n/**\n * Create intl formatters and populate cache\n * @param cache explicit cache to prevent leaking memory\n */\nexport function createFormatters(cache = createIntlCache()) {\n    return {\n        getDateTimeFormat: memoizeIntlConstructor(Intl.DateTimeFormat, cache.dateTime),\n        getNumberFormat: memoizeIntlConstructor(Intl.NumberFormat, cache.number),\n        getMessageFormat: memoizeIntlConstructor(IntlMessageFormat, cache.message),\n        getRelativeTimeFormat: memoizeIntlConstructor(Intl.RelativeTimeFormat, cache.relativeTime),\n        getPluralRules: memoizeIntlConstructor(Intl.PluralRules, cache.pluralRules),\n    };\n}\n","import * as React from 'react';\n// Since rollup cannot deal with namespace being a function,\n// this is to interop with TypeScript since `invariant`\n// does not export a default\n// https://github.com/rollup/rollup/issues/1267\nconst hoistNonReactStatics = require('hoist-non-react-statics');\nimport { invariantIntlContext } from '../utils';\nfunction getDisplayName(Component) {\n    return Component.displayName || Component.name || 'Component';\n}\n// TODO: We should provide initial value here\nconst IntlContext = React.createContext(null);\nconst { Consumer: IntlConsumer, Provider: IntlProvider } = IntlContext;\nexport const Provider = IntlProvider;\nexport const Context = IntlContext;\nexport default function injectIntl(WrappedComponent, options) {\n    const { intlPropName = 'intl', forwardRef = false, enforceContext = true } = options || {};\n    const WithIntl = props => {\n        return (React.createElement(IntlConsumer, null, intl => {\n            if (enforceContext) {\n                invariantIntlContext({ intl });\n            }\n            return (React.createElement(WrappedComponent, Object.assign({}, props, {\n                [intlPropName]: intl,\n            }, { ref: forwardRef ? props.forwardedRef : null })));\n        }));\n    };\n    WithIntl.displayName = `injectIntl(${getDisplayName(WrappedComponent)})`;\n    WithIntl.WrappedComponent = WrappedComponent;\n    if (forwardRef) {\n        return hoistNonReactStatics(React.forwardRef((props, ref) => (React.createElement(WithIntl, Object.assign({}, props, { forwardedRef: ref })))), WrappedComponent);\n    }\n    return hoistNonReactStatics(WithIntl, WrappedComponent);\n}\n","import * as React from 'react';\nimport withIntl from './injectIntl';\nexport default function createFormattedComponent(type) {\n    const Component = props => {\n        const { value, children, intl: { [type]: formatFn, textComponent: Text }, } = props;\n        let formattedValue = formatFn(value, props);\n        if (typeof children === 'function') {\n            return children(formattedValue);\n        }\n        if (Text) {\n            return React.createElement(Text, null, formattedValue);\n        }\n        // Work around @types/react where React.FC cannot return string\n        return formattedValue;\n    };\n    Component.displayName =\n        type === 'formatDate'\n            ? 'FormattedDate'\n            : type === 'formatTime'\n                ? 'FormattedTime'\n                : 'FormattedNumber';\n    return {\n        BaseComponent: Component,\n        Component: withIntl(Component),\n    };\n}\n","import { useContext } from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nexport default function useIntl() {\n    const intl = useContext(Context);\n    invariantIntlContext({ intl });\n    return intl;\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nconst invariant = require('invariant');\nimport { createError, escape, filterProps } from './utils';\nimport { TYPE } from 'intl-messageformat-parser';\nconst DATE_TIME_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'formatMatcher',\n    'timeZone',\n    'hour12',\n    'weekday',\n    'era',\n    'year',\n    'month',\n    'day',\n    'hour',\n    'minute',\n    'second',\n    'timeZoneName',\n];\nconst NUMBER_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'style',\n    'currency',\n    'currencyDisplay',\n    'useGrouping',\n    'minimumIntegerDigits',\n    'minimumFractionDigits',\n    'maximumFractionDigits',\n    'minimumSignificantDigits',\n    'maximumSignificantDigits',\n];\nconst RELATIVE_FORMAT_OPTIONS = [\n    'numeric',\n    'style',\n];\nconst PLURAL_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'type',\n];\nfunction getNamedFormat(formats, type, name, onError) {\n    const formatType = formats && formats[type];\n    let format;\n    if (formatType) {\n        format = formatType[name];\n    }\n    if (format) {\n        return format;\n    }\n    onError(createError(`No ${type} format named: ${name}`));\n}\n/**\n * Escape a raw msg when we run in prod mode\n * https://github.com/formatjs/formatjs/blob/master/packages/intl-messageformat-parser/src/parser.pegjs#L155\n */\nfunction escapeUnformattedMessage(msg) {\n    return msg.replace(/'\\{(.*?)\\}'/g, `{$1}`);\n}\nexport function formatDate({ locale, formats, onError, timeZone, }, state, value, options = {}) {\n    const { format } = options;\n    let date = new Date(value);\n    let defaults = Object.assign({}, (timeZone && { timeZone }), (format && getNamedFormat(formats, 'date', format, onError)));\n    let filteredOptions = filterProps(options, DATE_TIME_FORMAT_OPTIONS, defaults);\n    try {\n        return state.getDateTimeFormat(locale, filteredOptions).format(date);\n    }\n    catch (e) {\n        onError(createError('Error formatting date.', e));\n    }\n    return String(date);\n}\nexport function formatTime({ locale, formats, onError, timeZone, }, state, value, options = {}) {\n    const { format } = options;\n    let date = new Date(value);\n    let defaults = Object.assign({}, (timeZone && { timeZone }), (format && getNamedFormat(formats, 'time', format, onError)));\n    let filteredOptions = filterProps(options, DATE_TIME_FORMAT_OPTIONS, defaults);\n    if (!filteredOptions.hour &&\n        !filteredOptions.minute &&\n        !filteredOptions.second) {\n        // Add default formatting options if hour, minute, or second isn't defined.\n        filteredOptions = Object.assign({}, filteredOptions, { hour: 'numeric', minute: 'numeric' });\n    }\n    try {\n        return state.getDateTimeFormat(locale, filteredOptions).format(date);\n    }\n    catch (e) {\n        onError(createError('Error formatting time.', e));\n    }\n    return String(date);\n}\nexport function formatRelativeTime({ locale, formats, onError, }, state, value, unit = 'second', options = {}) {\n    const { format } = options;\n    let defaults = (!!format && getNamedFormat(formats, 'relative', format, onError)) || {};\n    let filteredOptions = filterProps(options, RELATIVE_FORMAT_OPTIONS, defaults);\n    try {\n        return state\n            .getRelativeTimeFormat(locale, filteredOptions)\n            .format(value, unit);\n    }\n    catch (e) {\n        onError(createError('Error formatting relative time.', e));\n    }\n    return String(value);\n}\nexport function formatNumber({ locale, formats, onError, }, state, value, options = {}) {\n    const { format } = options;\n    let defaults = (format && getNamedFormat(formats, 'number', format, onError)) || {};\n    let filteredOptions = filterProps(options, NUMBER_FORMAT_OPTIONS, defaults);\n    try {\n        return state.getNumberFormat(locale, filteredOptions).format(value);\n    }\n    catch (e) {\n        onError(createError('Error formatting number.', e));\n    }\n    return String(value);\n}\nexport function formatPlural({ locale, onError }, state, value, options = {}) {\n    let filteredOptions = filterProps(options, PLURAL_FORMAT_OPTIONS);\n    try {\n        return state.getPluralRules(locale, filteredOptions).select(value);\n    }\n    catch (e) {\n        onError(createError('Error formatting plural.', e));\n    }\n    return 'other';\n}\nexport function formatMessage({ locale, formats, messages, defaultLocale, defaultFormats, onError, }, state, messageDescriptor = { id: '' }, values = {}) {\n    const { id, defaultMessage } = messageDescriptor;\n    // `id` is a required field of a Message Descriptor.\n    invariant(id, '[React Intl] An `id` must be provided to format a message.');\n    const message = messages && messages[id];\n    const hasValues = Object.keys(values).length > 0;\n    // Avoid expensive message formatting for simple messages without values. In\n    // development messages will always be formatted in case of missing values.\n    if (!hasValues && process.env.NODE_ENV === 'production') {\n        const val = message || defaultMessage || id;\n        if (typeof val === 'string') {\n            return escapeUnformattedMessage(val);\n        }\n        invariant(val.length === 1 && val[0].type === TYPE.literal, 'Message has placeholders but no values was provided');\n        return val[0].value;\n    }\n    let formattedMessageParts = [];\n    if (message) {\n        try {\n            let formatter = state.getMessageFormat(message, locale, formats, {\n                formatters: state,\n            });\n            formattedMessageParts = formatter.formatXMLMessage(values);\n        }\n        catch (e) {\n            onError(createError(`Error formatting message: \"${id}\" for locale: \"${locale}\"` +\n                (defaultMessage ? ', using default message as fallback.' : ''), e));\n        }\n    }\n    else {\n        // This prevents warnings from littering the console in development\n        // when no `messages` are passed into the <IntlProvider> for the\n        // default locale, and a default message is in the source.\n        if (!defaultMessage ||\n            (locale && locale.toLowerCase() !== defaultLocale.toLowerCase())) {\n            onError(createError(`Missing message: \"${id}\" for locale: \"${locale}\"` +\n                (defaultMessage ? ', using default message as fallback.' : '')));\n        }\n    }\n    if (!formattedMessageParts.length && defaultMessage) {\n        try {\n            let formatter = state.getMessageFormat(defaultMessage, defaultLocale, defaultFormats);\n            formattedMessageParts = formatter.formatXMLMessage(values);\n        }\n        catch (e) {\n            onError(createError(`Error formatting the default message for: \"${id}\"`, e));\n        }\n    }\n    if (!formattedMessageParts.length) {\n        onError(createError(`Cannot format message: \"${id}\", ` +\n            `using message ${message || defaultMessage ? 'source' : 'id'} as fallback.`));\n        if (typeof message === 'string') {\n            return message || defaultMessage || id;\n        }\n        return defaultMessage || id;\n    }\n    if (formattedMessageParts.length === 1 &&\n        typeof formattedMessageParts[0] === 'string') {\n        return formattedMessageParts[0] || defaultMessage || id;\n    }\n    return formattedMessageParts;\n}\nexport function formatHTMLMessage(config, state, messageDescriptor = { id: '' }, rawValues = {}) {\n    // Process all the values before they are used when formatting the ICU\n    // Message string. Since the formatted message might be injected via\n    // `innerHTML`, all String-based values need to be HTML-escaped.\n    let escapedValues = Object.keys(rawValues).reduce((escaped, name) => {\n        let value = rawValues[name];\n        escaped[name] = typeof value === 'string' ? escape(value) : value;\n        return escaped;\n    }, {});\n    return formatMessage(config, state, messageDescriptor, escapedValues);\n}\nexport const formatters = {\n    formatNumber,\n    formatDate,\n    formatTime,\n    formatMessage,\n    formatPlural,\n    formatHTMLMessage,\n    formatRelativeTime,\n};\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nvar DEFAULT_CONSTRUCTORS = [\n    Intl.DateTimeFormat,\n    Intl.NumberFormat,\n    Intl.PluralRules\n];\nexport default function areIntlLocalesSupported(locales, constructorsToCheck) {\n    if (constructorsToCheck === void 0) { constructorsToCheck = DEFAULT_CONSTRUCTORS; }\n    if (typeof Intl === 'undefined') {\n        return false;\n    }\n    if (!locales) {\n        throw new Error('locales must be supplied.');\n    }\n    if (!Array.isArray(locales)) {\n        locales = [locales];\n    }\n    var intlConstructors = constructorsToCheck.filter(Boolean);\n    if (intlConstructors.length === 0) {\n        return false;\n    }\n    return intlConstructors.every(function (intlConstructor) {\n        return intlConstructor.supportedLocalesOf(locales).length === locales.length;\n    });\n}\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport { Provider } from './injectIntl';\nimport { createError, DEFAULT_INTL_CONFIG, createFormatters, invariantIntlContext, createIntlCache, } from '../utils';\nimport { formatNumber, formatRelativeTime, formatDate, formatTime, formatPlural, formatHTMLMessage, formatMessage, } from '../format';\nimport areIntlLocalesSupported from 'intl-locales-supported';\nconst shallowEquals = require('shallow-equal/objects');\nexport default class IntlProvider extends React.PureComponent {\n    constructor() {\n        super(...arguments);\n        this.cache = createIntlCache();\n        this.state = {\n            cache: this.cache,\n            intl: undefined,\n            prevProps: {\n                locale: this.props.locale,\n            },\n        };\n    }\n    static getDerivedStateFromProps(props, { prevProps, cache }) {\n        const { locale, timeZone, formats, textComponent, messages, defaultLocale, defaultFormats, onError, } = props;\n        const filteredProps = {\n            locale,\n            timeZone,\n            formats,\n            textComponent,\n            messages,\n            defaultLocale,\n            defaultFormats,\n            onError,\n        };\n        if (!shallowEquals(prevProps, filteredProps)) {\n            return {\n                intl: createIntl(props, cache),\n                prevProps: filteredProps,\n            };\n        }\n        return null;\n    }\n    render() {\n        invariantIntlContext(this.state);\n        return React.createElement(Provider, { value: this.state.intl }, this.props.children);\n    }\n}\nIntlProvider.displayName = 'IntlProvider';\nIntlProvider.defaultProps = DEFAULT_INTL_CONFIG;\n/**\n * Create intl object\n * @param config intl config\n * @param cache cache for formatter instances to prevent memory leak\n */\nexport function createIntl(config, cache) {\n    const formatters = createFormatters(cache);\n    const resolvedConfig = Object.assign({}, DEFAULT_INTL_CONFIG, config);\n    if (!resolvedConfig.locale ||\n        !areIntlLocalesSupported(resolvedConfig.locale)) {\n        const { locale, defaultLocale, onError } = resolvedConfig;\n        if (typeof onError === 'function') {\n            onError(createError(`Missing locale data for locale: \"${locale}\". ` +\n                `Using default locale: \"${defaultLocale}\" as fallback.`));\n        }\n        // Since there's no registered locale data for `locale`, this will\n        // fallback to the `defaultLocale` to make sure things can render.\n        // The `messages` are overridden to the `defaultProps` empty object\n        // to maintain referential equality across re-renders. It's assumed\n        // each <FormattedMessage> contains a `defaultMessage` prop.\n        resolvedConfig.locale = resolvedConfig.defaultLocale || 'en';\n    }\n    return Object.assign({}, resolvedConfig, { formatters, formatNumber: formatNumber.bind(undefined, resolvedConfig, formatters), formatRelativeTime: formatRelativeTime.bind(undefined, resolvedConfig, formatters), formatDate: formatDate.bind(undefined, resolvedConfig, formatters), formatTime: formatTime.bind(undefined, resolvedConfig, formatters), formatPlural: formatPlural.bind(undefined, resolvedConfig, formatters), formatMessage: formatMessage.bind(undefined, resolvedConfig, formatters), formatHTMLMessage: formatHTMLMessage.bind(undefined, resolvedConfig, formatters) });\n}\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport withIntl from './injectIntl';\nconst invariant = require('invariant');\nconst MINUTE = 60;\nconst HOUR = 60 * 60;\nconst DAY = 60 * 60 * 24;\nfunction selectUnit(seconds) {\n    const absValue = Math.abs(seconds);\n    if (absValue < MINUTE) {\n        return 'second';\n    }\n    if (absValue < HOUR) {\n        return 'minute';\n    }\n    if (absValue < DAY) {\n        return 'hour';\n    }\n    return 'day';\n}\nfunction getDurationInSeconds(unit) {\n    switch (unit) {\n        case 'second':\n            return 1;\n        case 'minute':\n            return MINUTE;\n        case 'hour':\n            return HOUR;\n        default:\n            return DAY;\n    }\n}\nfunction valueToSeconds(value, unit) {\n    if (!value) {\n        return 0;\n    }\n    switch (unit) {\n        case 'second':\n            return value;\n        case 'minute':\n            return value * MINUTE;\n        default:\n            return value * HOUR;\n    }\n}\nconst INCREMENTABLE_UNITS = ['second', 'minute', 'hour'];\nfunction canIncrement(unit = 'second') {\n    return INCREMENTABLE_UNITS.includes(unit);\n}\nfunction verifyProps(updateIntervalInSeconds, unit) {\n    invariant(!updateIntervalInSeconds || (updateIntervalInSeconds && canIncrement(unit)), 'Cannot schedule update with unit longer than hour');\n}\nclass FormattedRelativeTime extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        // Public for testing\n        this._updateTimer = null;\n        this.state = {\n            prevUnit: this.props.unit,\n            prevValue: this.props.value,\n            currentValueInSeconds: canIncrement(this.props.unit)\n                ? valueToSeconds(this.props.value, this.props.unit)\n                : 0,\n        };\n        verifyProps(props.updateIntervalInSeconds, props.unit);\n    }\n    scheduleNextUpdate({ updateIntervalInSeconds, unit }, { currentValueInSeconds }) {\n        clearTimeout(this._updateTimer);\n        this._updateTimer = null;\n        // If there's no interval and we cannot increment this unit, do nothing\n        if (!updateIntervalInSeconds || !canIncrement(unit)) {\n            return;\n        }\n        // Figure out the next interesting time\n        const nextValueInSeconds = currentValueInSeconds - updateIntervalInSeconds;\n        const nextUnit = selectUnit(nextValueInSeconds);\n        // We've reached the max auto incrementable unit, don't schedule another update\n        if (nextUnit === 'day') {\n            return;\n        }\n        const unitDuration = getDurationInSeconds(nextUnit);\n        const remainder = nextValueInSeconds % unitDuration;\n        const prevInterestingValueInSeconds = nextValueInSeconds - remainder;\n        const nextInterestingValueInSeconds = prevInterestingValueInSeconds >= currentValueInSeconds\n            ? prevInterestingValueInSeconds - unitDuration\n            : prevInterestingValueInSeconds;\n        const delayInSeconds = Math.abs(nextInterestingValueInSeconds - currentValueInSeconds);\n        this._updateTimer = setTimeout(() => this.setState({\n            currentValueInSeconds: nextInterestingValueInSeconds,\n        }), delayInSeconds * 1e3);\n    }\n    componentDidMount() {\n        this.scheduleNextUpdate(this.props, this.state);\n    }\n    componentDidUpdate() {\n        this.scheduleNextUpdate(this.props, this.state);\n    }\n    componentWillUnmount() {\n        clearTimeout(this._updateTimer);\n        this._updateTimer = null;\n    }\n    static getDerivedStateFromProps(props, state) {\n        if (props.unit !== state.prevUnit || props.value !== state.prevValue) {\n            return {\n                prevValue: props.value,\n                prevUnit: props.unit,\n                currentValueInSeconds: canIncrement(props.unit)\n                    ? valueToSeconds(props.value, props.unit)\n                    : 0,\n            };\n        }\n        return null;\n    }\n    render() {\n        const { formatRelativeTime, textComponent: Text } = this.props.intl;\n        const { children, value, unit, updateIntervalInSeconds } = this.props;\n        const { currentValueInSeconds } = this.state;\n        let currentValue = value || 0;\n        let currentUnit = unit;\n        if (canIncrement(unit) &&\n            currentValueInSeconds &&\n            updateIntervalInSeconds) {\n            currentUnit = selectUnit(currentValueInSeconds);\n            const unitDuration = getDurationInSeconds(currentUnit);\n            currentValue = Math.round(currentValueInSeconds / unitDuration);\n        }\n        const formattedRelativeTime = formatRelativeTime(currentValue, currentUnit, Object.assign({}, this.props));\n        if (typeof children === 'function') {\n            return children(formattedRelativeTime);\n        }\n        if (Text) {\n            return React.createElement(Text, null, formattedRelativeTime);\n        }\n        return formattedRelativeTime;\n    }\n}\nFormattedRelativeTime.defaultProps = {\n    value: 0,\n    unit: 'second',\n};\nexport const BaseFormattedRelativeTime = FormattedRelativeTime;\nexport default withIntl(FormattedRelativeTime);\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport withIntl from './injectIntl';\nconst FormattedPlural = props => {\n    const { value, other, children, intl: { formatPlural, textComponent: Text }, } = props;\n    let pluralCategory = formatPlural(value, props);\n    let formattedPlural = props[pluralCategory] || other;\n    if (typeof children === 'function') {\n        return children(formattedPlural);\n    }\n    if (Text) {\n        return React.createElement(Text, null, formattedPlural);\n    }\n    // Work around @types/react where React.FC cannot return string\n    return formattedPlural;\n};\nFormattedPlural.defaultProps = {\n    type: 'cardinal',\n};\nFormattedPlural.displayName = 'FormattedPlural';\nexport default withIntl(FormattedPlural);\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport * as React from 'react';\nimport withIntl from './injectIntl';\nconst shallowEquals = require('shallow-equal/objects');\nimport { formatMessage as baseFormatMessage } from '../format';\nimport { invariantIntlContext, DEFAULT_INTL_CONFIG, createFormatters, } from '../utils';\nconst defaultFormatMessage = (descriptor, values) => {\n    if (process.env.NODE_ENV !== 'production') {\n        console.error('[React Intl] Could not find required `intl` object. <IntlProvider> needs to exist in the component ancestry. Using default message as fallback.');\n    }\n    return baseFormatMessage(Object.assign({}, DEFAULT_INTL_CONFIG, { locale: 'en' }), createFormatters(), descriptor, values);\n};\nexport class BaseFormattedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n        if (!props.defaultMessage) {\n            invariantIntlContext(props);\n        }\n    }\n    shouldComponentUpdate(nextProps) {\n        const _a = this.props, { values } = _a, otherProps = __rest(_a, [\"values\"]);\n        const { values: nextValues } = nextProps, nextOtherProps = __rest(nextProps, [\"values\"]);\n        return (!shallowEquals(nextValues, values) ||\n            !shallowEquals(otherProps, nextOtherProps));\n    }\n    render() {\n        const { formatMessage = defaultFormatMessage, textComponent: Text = React.Fragment, } = this.props.intl || {};\n        const { id, description, defaultMessage, values, tagName: Component = Text, children, } = this.props;\n        const descriptor = { id, description, defaultMessage };\n        let nodes = formatMessage(descriptor, values);\n        if (!Array.isArray(nodes)) {\n            nodes = [nodes];\n        }\n        if (typeof children === 'function') {\n            return children(...nodes);\n        }\n        if (Component) {\n            // Needs to use `createElement()` instead of JSX, otherwise React will\n            // warn about a missing `key` prop with rich-text message formatting.\n            return React.createElement(Component, null, ...nodes);\n        }\n        return nodes;\n    }\n}\nBaseFormattedMessage.defaultProps = {\n    values: {},\n};\nexport default withIntl(BaseFormattedMessage, { enforceContext: false });\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport withIntl from './injectIntl';\nimport { BaseFormattedMessage } from './message';\nclass FormattedHTMLMessage extends BaseFormattedMessage {\n    render() {\n        const { formatHTMLMessage, textComponent: Text } = this.props.intl;\n        const { id, description, defaultMessage, values: rawValues, \n        // This is bc of TS3.3 doesn't recognize `defaultProps`\n        tagName: Component = Text || 'span', children, } = this.props;\n        let descriptor = { id, description, defaultMessage };\n        let formattedHTMLMessage = formatHTMLMessage(descriptor, rawValues);\n        if (typeof children === 'function') {\n            return children(formattedHTMLMessage);\n        }\n        // Since the message presumably has HTML in it, we need to set\n        // `innerHTML` in order for it to be rendered and not escaped by React.\n        // To be safe, all string prop values were escaped when formatting the\n        // message. It is assumed that the message is not UGC, and came from the\n        // developer making it more like a template.\n        //\n        // Note: There's a perf impact of using this component since there's no\n        // way for React to do its virtual DOM diffing.\n        const html = { __html: formattedHTMLMessage };\n        return React.createElement(Component, { dangerouslySetInnerHTML: html });\n    }\n}\nFormattedHTMLMessage.defaultProps = Object.assign({}, BaseFormattedMessage.defaultProps, { tagName: 'span' });\nexport const BaseFormattedHTMLMessage = FormattedHTMLMessage; // testing purpose only\nexport default withIntl(FormattedHTMLMessage);\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nexport { default as defineMessages } from './define-messages';\nimport createFormattedComponent from './components/createFormattedComponent';\nexport { default as injectIntl, Provider as RawIntlProvider, Context as IntlContext, } from './components/injectIntl';\nexport { default as useIntl } from './components/useIntl';\nexport { default as IntlProvider, createIntl } from './components/provider';\nexport const { Component: FormattedDate } = createFormattedComponent('formatDate');\nexport const { Component: FormattedTime } = createFormattedComponent('formatTime');\nexport const { Component: FormattedNumber } = createFormattedComponent('formatNumber');\nexport { default as FormattedRelativeTime } from './components/relative';\nexport { default as FormattedPlural } from './components/plural';\nexport { default as FormattedMessage } from './components/message';\nexport { default as FormattedHTMLMessage } from './components/html-message';\n"],"names":["this","__extends","__assign","memoizeIntlConstructor","React.Fragment","React.createContext","React.createElement","React.forwardRef","withIntl","useContext","invariant","tslib_1.__extends","React.PureComponent","IntlProvider","shallowEquals","baseFormatMessage","React.Component"],"mappings":"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"}