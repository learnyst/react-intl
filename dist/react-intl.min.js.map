{"version":3,"file":"react-intl.min.js","sources":["../node_modules/intl-messageformat-parser/lib/types.js","../node_modules/intl-messageformat-parser/lib/parser.js","../node_modules/intl-messageformat-parser/lib/normalize.js","../node_modules/intl-messageformat/lib/formatters.js","../node_modules/intl-format-cache/lib/index.js","../node_modules/intl-messageformat/lib/core.js","../lib/utils.js","../lib/components/injectIntl.js","../lib/components/createFormattedComponent.js","../node_modules/tslib/tslib.es6.js","../lib/format.js","../node_modules/intl-locales-supported/lib/index.js","../lib/components/provider.js","../lib/components/relative.js","../lib/components/plural.js","../lib/components/message.js","../lib/components/html-message.js","../lib/core.js","../lib/index.js","../node_modules/intl-messageformat-parser/lib/index.js","../lib/define-messages.js","../lib/components/useIntl.js"],"sourcesContent":["export var TYPE;\n(function (TYPE) {\n    /**\n     * Raw text\n     */\n    TYPE[TYPE[\"literal\"] = 0] = \"literal\";\n    /**\n     * Variable w/o any format, e.g `var` in `this is a {var}`\n     */\n    TYPE[TYPE[\"argument\"] = 1] = \"argument\";\n    /**\n     * Variable w/ number format\n     */\n    TYPE[TYPE[\"number\"] = 2] = \"number\";\n    /**\n     * Variable w/ date format\n     */\n    TYPE[TYPE[\"date\"] = 3] = \"date\";\n    /**\n     * Variable w/ time format\n     */\n    TYPE[TYPE[\"time\"] = 4] = \"time\";\n    /**\n     * Variable w/ select format\n     */\n    TYPE[TYPE[\"select\"] = 5] = \"select\";\n    /**\n     * Variable w/ plural format\n     */\n    TYPE[TYPE[\"plural\"] = 6] = \"plural\";\n})(TYPE || (TYPE = {}));\n/**\n * Type Guards\n */\nexport function isLiteralElement(el) {\n    return el.type === TYPE.literal;\n}\nexport function isArgumentElement(el) {\n    return el.type === TYPE.argument;\n}\nexport function isNumberElement(el) {\n    return el.type === TYPE.number;\n}\nexport function isDateElement(el) {\n    return el.type === TYPE.date;\n}\nexport function isTimeElement(el) {\n    return el.type === TYPE.time;\n}\nexport function isSelectElement(el) {\n    return el.type === TYPE.select;\n}\nexport function isPluralElement(el) {\n    return el.type === TYPE.plural;\n}\nexport function isNumberSkeleton(el) {\n    return el.type === 0 /* number */;\n}\nexport function isDateSkeleton(el) {\n    return el.type === 1 /* date */;\n}\nexport function createLiteralElement(value) {\n    return {\n        type: TYPE.literal,\n        value: value\n    };\n}\nexport function createNumberElement(value, style) {\n    return {\n        type: TYPE.number,\n        value: value,\n        style: style\n    };\n}\n","// tslint:disable:only-arrow-functions\n// tslint:disable:object-literal-shorthand\n// tslint:disable:trailing-comma\n// tslint:disable:object-literal-sort-keys\n// tslint:disable:one-variable-per-declaration\n// tslint:disable:max-line-length\n// tslint:disable:no-consecutive-blank-lines\n// tslint:disable:align\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n// Generated by PEG.js v. 0.10.0 (ts-pegjs plugin v. 0.2.5 )\n//\n// https://pegjs.org/   https://github.com/metadevpro/ts-pegjs\nimport { TYPE, } from './types';\nvar SyntaxError = /** @class */ (function (_super) {\n    __extends(SyntaxError, _super);\n    function SyntaxError(message, expected, found, location) {\n        var _this = _super.call(this) || this;\n        _this.message = message;\n        _this.expected = expected;\n        _this.found = found;\n        _this.location = location;\n        _this.name = \"SyntaxError\";\n        if (typeof Error.captureStackTrace === \"function\") {\n            Error.captureStackTrace(_this, SyntaxError);\n        }\n        return _this;\n    }\n    SyntaxError.buildMessage = function (expected, found) {\n        function hex(ch) {\n            return ch.charCodeAt(0).toString(16).toUpperCase();\n        }\n        function literalEscape(s) {\n            return s\n                .replace(/\\\\/g, \"\\\\\\\\\")\n                .replace(/\"/g, \"\\\\\\\"\")\n                .replace(/\\0/g, \"\\\\0\")\n                .replace(/\\t/g, \"\\\\t\")\n                .replace(/\\n/g, \"\\\\n\")\n                .replace(/\\r/g, \"\\\\r\")\n                .replace(/[\\x00-\\x0F]/g, function (ch) { return \"\\\\x0\" + hex(ch); })\n                .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) { return \"\\\\x\" + hex(ch); });\n        }\n        function classEscape(s) {\n            return s\n                .replace(/\\\\/g, \"\\\\\\\\\")\n                .replace(/\\]/g, \"\\\\]\")\n                .replace(/\\^/g, \"\\\\^\")\n                .replace(/-/g, \"\\\\-\")\n                .replace(/\\0/g, \"\\\\0\")\n                .replace(/\\t/g, \"\\\\t\")\n                .replace(/\\n/g, \"\\\\n\")\n                .replace(/\\r/g, \"\\\\r\")\n                .replace(/[\\x00-\\x0F]/g, function (ch) { return \"\\\\x0\" + hex(ch); })\n                .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) { return \"\\\\x\" + hex(ch); });\n        }\n        function describeExpectation(expectation) {\n            switch (expectation.type) {\n                case \"literal\":\n                    return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n                case \"class\":\n                    var escapedParts = expectation.parts.map(function (part) {\n                        return Array.isArray(part)\n                            ? classEscape(part[0]) + \"-\" + classEscape(part[1])\n                            : classEscape(part);\n                    });\n                    return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n                case \"any\":\n                    return \"any character\";\n                case \"end\":\n                    return \"end of input\";\n                case \"other\":\n                    return expectation.description;\n            }\n        }\n        function describeExpected(expected1) {\n            var descriptions = expected1.map(describeExpectation);\n            var i;\n            var j;\n            descriptions.sort();\n            if (descriptions.length > 0) {\n                for (i = 1, j = 1; i < descriptions.length; i++) {\n                    if (descriptions[i - 1] !== descriptions[i]) {\n                        descriptions[j] = descriptions[i];\n                        j++;\n                    }\n                }\n                descriptions.length = j;\n            }\n            switch (descriptions.length) {\n                case 1:\n                    return descriptions[0];\n                case 2:\n                    return descriptions[0] + \" or \" + descriptions[1];\n                default:\n                    return descriptions.slice(0, -1).join(\", \")\n                        + \", or \"\n                        + descriptions[descriptions.length - 1];\n            }\n        }\n        function describeFound(found1) {\n            return found1 ? \"\\\"\" + literalEscape(found1) + \"\\\"\" : \"end of input\";\n        }\n        return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n    };\n    return SyntaxError;\n}(Error));\nexport { SyntaxError };\nfunction peg$parse(input, options) {\n    options = options !== undefined ? options : {};\n    var peg$FAILED = {};\n    var peg$startRuleFunctions = { start: peg$parsestart };\n    var peg$startRuleFunction = peg$parsestart;\n    var peg$c0 = function (parts) {\n        return parts.join('');\n    };\n    var peg$c1 = function (messageText) {\n        return __assign({ type: TYPE.literal, value: messageText }, insertLocation());\n    };\n    var peg$c2 = peg$otherExpectation(\"argumentElement\");\n    var peg$c3 = \"{\";\n    var peg$c4 = peg$literalExpectation(\"{\", false);\n    var peg$c5 = \"}\";\n    var peg$c6 = peg$literalExpectation(\"}\", false);\n    var peg$c7 = function (value) {\n        return __assign({ type: TYPE.argument, value: value }, insertLocation());\n    };\n    var peg$c8 = peg$otherExpectation(\"numberSkeletonId\");\n    var peg$c9 = /^['\\/{}]/;\n    var peg$c10 = peg$classExpectation([\"'\", \"/\", \"{\", \"}\"], false, false);\n    var peg$c11 = peg$anyExpectation();\n    var peg$c12 = peg$otherExpectation(\"numberSkeletonTokenOption\");\n    var peg$c13 = \"/\";\n    var peg$c14 = peg$literalExpectation(\"/\", false);\n    var peg$c15 = function (option) { return option; };\n    var peg$c16 = peg$otherExpectation(\"numberSkeletonToken\");\n    var peg$c17 = function (stem, options) {\n        return { stem: stem, options: options };\n    };\n    var peg$c18 = function (tokens) {\n        return __assign({ type: 0 /* number */, tokens: tokens }, insertLocation());\n    };\n    var peg$c19 = \"::\";\n    var peg$c20 = peg$literalExpectation(\"::\", false);\n    var peg$c21 = function (skeleton) { return skeleton; };\n    var peg$c22 = function (style) { return style.replace(/\\s*$/, ''); };\n    var peg$c23 = \",\";\n    var peg$c24 = peg$literalExpectation(\",\", false);\n    var peg$c25 = \"number\";\n    var peg$c26 = peg$literalExpectation(\"number\", false);\n    var peg$c27 = function (value, type, style) {\n        return __assign({ type: type === 'number' ? TYPE.number : type === 'date' ? TYPE.date : TYPE.time, style: style && style[2], value: value }, insertLocation());\n    };\n    var peg$c28 = function (pattern) {\n        return __assign({ type: 1 /* date */, pattern: pattern }, insertLocation());\n    };\n    var peg$c29 = \"date\";\n    var peg$c30 = peg$literalExpectation(\"date\", false);\n    var peg$c31 = \"time\";\n    var peg$c32 = peg$literalExpectation(\"time\", false);\n    var peg$c33 = \"plural\";\n    var peg$c34 = peg$literalExpectation(\"plural\", false);\n    var peg$c35 = \"selectordinal\";\n    var peg$c36 = peg$literalExpectation(\"selectordinal\", false);\n    var peg$c37 = \"offset:\";\n    var peg$c38 = peg$literalExpectation(\"offset:\", false);\n    var peg$c39 = function (value, pluralType, offset, options) {\n        return __assign({ type: TYPE.plural, pluralType: pluralType === 'plural' ? 'cardinal' : 'ordinal', value: value, offset: offset ? offset[2] : 0, options: options.reduce(function (all, _a) {\n                var id = _a.id, value = _a.value, location = _a.location;\n                all[id] = {\n                    value: value,\n                    location: location\n                };\n                return all;\n            }, {}) }, insertLocation());\n    };\n    var peg$c40 = \"select\";\n    var peg$c41 = peg$literalExpectation(\"select\", false);\n    var peg$c42 = function (value, options) {\n        return __assign({ type: TYPE.select, value: value, options: options.reduce(function (all, _a) {\n                var id = _a.id, value = _a.value, location = _a.location;\n                all[id] = {\n                    value: value,\n                    location: location\n                };\n                return all;\n            }, {}) }, insertLocation());\n    };\n    var peg$c43 = \"=\";\n    var peg$c44 = peg$literalExpectation(\"=\", false);\n    var peg$c45 = function (id, value) {\n        return __assign({ id: id,\n            value: value }, insertLocation());\n    };\n    var peg$c46 = function (id, value) {\n        return __assign({ id: id,\n            value: value }, insertLocation());\n    };\n    var peg$c47 = /^[\\t-\\r \\x85\\u200E\\u200F\\u2028\\u2029]/;\n    var peg$c48 = peg$classExpectation([[\"\\t\", \"\\r\"], \" \", \"\\x85\", \"\\u200E\", \"\\u200F\", \"\\u2028\", \"\\u2029\"], false, false);\n    var peg$c49 = /^[!-\\/:-@[-\\^`{-~\\xA1-\\xA7\\xA9\\xAB\\xAC\\xAE\\xB0\\xB1\\xB6\\xBB\\xBF\\xD7\\xF7\\u2010-\\u2027\\u2030-\\u203E\\u2041-\\u2053\\u2055-\\u205E\\u2190-\\u245F\\u2500-\\u2775\\u2794-\\u2BFF\\u2E00-\\u2E7F\\u3001-\\u3003\\u3008-\\u3020\\u3030\\uFD3E\\uFD3F\\uFE45\\uFE46]/;\n    var peg$c50 = peg$classExpectation([[\"!\", \"/\"], [\":\", \"@\"], [\"[\", \"^\"], \"`\", [\"{\", \"~\"], [\"\\xA1\", \"\\xA7\"], \"\\xA9\", \"\\xAB\", \"\\xAC\", \"\\xAE\", \"\\xB0\", \"\\xB1\", \"\\xB6\", \"\\xBB\", \"\\xBF\", \"\\xD7\", \"\\xF7\", [\"\\u2010\", \"\\u2027\"], [\"\\u2030\", \"\\u203E\"], [\"\\u2041\", \"\\u2053\"], [\"\\u2055\", \"\\u205E\"], [\"\\u2190\", \"\\u245F\"], [\"\\u2500\", \"\\u2775\"], [\"\\u2794\", \"\\u2BFF\"], [\"\\u2E00\", \"\\u2E7F\"], [\"\\u3001\", \"\\u3003\"], [\"\\u3008\", \"\\u3020\"], \"\\u3030\", \"\\uFD3E\", \"\\uFD3F\", \"\\uFE45\", \"\\uFE46\"], false, false);\n    var peg$c51 = peg$otherExpectation(\"optional whitespace\");\n    var peg$c52 = /^[0-9]/;\n    var peg$c53 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n    var peg$c54 = function (digits) {\n        return parseInt(digits.join(''), 10);\n    };\n    var peg$c55 = peg$otherExpectation(\"apostrophe\");\n    var peg$c56 = \"'\";\n    var peg$c57 = peg$literalExpectation(\"'\", false);\n    var peg$c58 = peg$otherExpectation(\"double apostrophes\");\n    var peg$c59 = \"''\";\n    var peg$c60 = peg$literalExpectation(\"''\", false);\n    var peg$c61 = function () { return \"'\"; };\n    var peg$c62 = /^[{}]/;\n    var peg$c63 = peg$classExpectation([\"{\", \"}\"], false, false);\n    var peg$c64 = /^[^']/;\n    var peg$c65 = peg$classExpectation([\"'\"], true, false);\n    var peg$c66 = function (escapedChar, quotedChars) {\n        return escapedChar + quotedChars.replace(\"''\", \"'\");\n    };\n    var peg$c67 = /^[^{}]/;\n    var peg$c68 = peg$classExpectation([\"{\", \"}\"], true, false);\n    var peg$c69 = peg$otherExpectation(\"keyword\");\n    var peg$currPos = 0;\n    var peg$savedPos = 0;\n    var peg$posDetailsCache = [{ line: 1, column: 1 }];\n    var peg$maxFailPos = 0;\n    var peg$maxFailExpected = [];\n    var peg$silentFails = 0;\n    var peg$result;\n    if (options.startRule !== undefined) {\n        if (!(options.startRule in peg$startRuleFunctions)) {\n            throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n        }\n        peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n    function text() {\n        return input.substring(peg$savedPos, peg$currPos);\n    }\n    function location() {\n        return peg$computeLocation(peg$savedPos, peg$currPos);\n    }\n    function expected(description, location1) {\n        location1 = location1 !== undefined\n            ? location1\n            : peg$computeLocation(peg$savedPos, peg$currPos);\n        throw peg$buildStructuredError([peg$otherExpectation(description)], input.substring(peg$savedPos, peg$currPos), location1);\n    }\n    function error(message, location1) {\n        location1 = location1 !== undefined\n            ? location1\n            : peg$computeLocation(peg$savedPos, peg$currPos);\n        throw peg$buildSimpleError(message, location1);\n    }\n    function peg$literalExpectation(text1, ignoreCase) {\n        return { type: \"literal\", text: text1, ignoreCase: ignoreCase };\n    }\n    function peg$classExpectation(parts, inverted, ignoreCase) {\n        return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n    }\n    function peg$anyExpectation() {\n        return { type: \"any\" };\n    }\n    function peg$endExpectation() {\n        return { type: \"end\" };\n    }\n    function peg$otherExpectation(description) {\n        return { type: \"other\", description: description };\n    }\n    function peg$computePosDetails(pos) {\n        var details = peg$posDetailsCache[pos];\n        var p;\n        if (details) {\n            return details;\n        }\n        else {\n            p = pos - 1;\n            while (!peg$posDetailsCache[p]) {\n                p--;\n            }\n            details = peg$posDetailsCache[p];\n            details = {\n                line: details.line,\n                column: details.column\n            };\n            while (p < pos) {\n                if (input.charCodeAt(p) === 10) {\n                    details.line++;\n                    details.column = 1;\n                }\n                else {\n                    details.column++;\n                }\n                p++;\n            }\n            peg$posDetailsCache[pos] = details;\n            return details;\n        }\n    }\n    function peg$computeLocation(startPos, endPos) {\n        var startPosDetails = peg$computePosDetails(startPos);\n        var endPosDetails = peg$computePosDetails(endPos);\n        return {\n            start: {\n                offset: startPos,\n                line: startPosDetails.line,\n                column: startPosDetails.column\n            },\n            end: {\n                offset: endPos,\n                line: endPosDetails.line,\n                column: endPosDetails.column\n            }\n        };\n    }\n    function peg$fail(expected1) {\n        if (peg$currPos < peg$maxFailPos) {\n            return;\n        }\n        if (peg$currPos > peg$maxFailPos) {\n            peg$maxFailPos = peg$currPos;\n            peg$maxFailExpected = [];\n        }\n        peg$maxFailExpected.push(expected1);\n    }\n    function peg$buildSimpleError(message, location1) {\n        return new SyntaxError(message, [], \"\", location1);\n    }\n    function peg$buildStructuredError(expected1, found, location1) {\n        return new SyntaxError(SyntaxError.buildMessage(expected1, found), expected1, found, location1);\n    }\n    function peg$parsestart() {\n        var s0;\n        s0 = peg$parsemessage();\n        return s0;\n    }\n    function peg$parsemessage() {\n        var s0, s1;\n        s0 = [];\n        s1 = peg$parsemessageElement();\n        while (s1 !== peg$FAILED) {\n            s0.push(s1);\n            s1 = peg$parsemessageElement();\n        }\n        return s0;\n    }\n    function peg$parsemessageElement() {\n        var s0;\n        s0 = peg$parseliteralElement();\n        if (s0 === peg$FAILED) {\n            s0 = peg$parseargumentElement();\n            if (s0 === peg$FAILED) {\n                s0 = peg$parsesimpleFormatElement();\n                if (s0 === peg$FAILED) {\n                    s0 = peg$parsepluralElement();\n                    if (s0 === peg$FAILED) {\n                        s0 = peg$parseselectElement();\n                    }\n                }\n            }\n        }\n        return s0;\n    }\n    function peg$parsemessageText() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parsedoubleApostrophes();\n        if (s2 === peg$FAILED) {\n            s2 = peg$parsequotedString();\n            if (s2 === peg$FAILED) {\n                s2 = peg$parseunquotedString();\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$parsedoubleApostrophes();\n                if (s2 === peg$FAILED) {\n                    s2 = peg$parsequotedString();\n                    if (s2 === peg$FAILED) {\n                        s2 = peg$parseunquotedString();\n                    }\n                }\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c0(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parseliteralElement() {\n        var s0, s1;\n        s0 = peg$currPos;\n        s1 = peg$parsemessageText();\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c1(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parseargName() {\n        var s0, s1;\n        s0 = peg$currPos;\n        s1 = peg$parsenumber();\n        if (s1 === peg$FAILED) {\n            s1 = peg$parsekeyword();\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        return s0;\n    }\n    function peg$parseargumentElement() {\n        var s0, s1, s2, s3, s4, s5;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c3;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c4);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargName();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 125) {\n                            s5 = peg$c5;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c6);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            peg$savedPos = s0;\n                            s1 = peg$c7(s3);\n                            s0 = s1;\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c2);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeletonId() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parsepatternWhiteSpace();\n        if (s4 === peg$FAILED) {\n            if (peg$c9.test(input.charAt(peg$currPos))) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c10);\n                }\n            }\n        }\n        peg$silentFails--;\n        if (s4 === peg$FAILED) {\n            s3 = undefined;\n        }\n        else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c11);\n                }\n            }\n            if (s4 !== peg$FAILED) {\n                s3 = [s3, s4];\n                s2 = s3;\n            }\n            else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$currPos;\n                s3 = peg$currPos;\n                peg$silentFails++;\n                s4 = peg$parsepatternWhiteSpace();\n                if (s4 === peg$FAILED) {\n                    if (peg$c9.test(input.charAt(peg$currPos))) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c10);\n                        }\n                    }\n                }\n                peg$silentFails--;\n                if (s4 === peg$FAILED) {\n                    s3 = undefined;\n                }\n                else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                }\n                if (s3 !== peg$FAILED) {\n                    if (input.length > peg$currPos) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c11);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        s3 = [s3, s4];\n                        s2 = s3;\n                    }\n                    else {\n                        peg$currPos = s2;\n                        s2 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s2;\n                    s2 = peg$FAILED;\n                }\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c8);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeletonTokenOption() {\n        var s0, s1, s2;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 47) {\n            s1 = peg$c13;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c14);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsenumberSkeletonId();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c15(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c12);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeletonToken() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsenumberSkeletonId();\n            if (s2 !== peg$FAILED) {\n                s3 = [];\n                s4 = peg$parsenumberSkeletonTokenOption();\n                while (s4 !== peg$FAILED) {\n                    s3.push(s4);\n                    s4 = peg$parsenumberSkeletonTokenOption();\n                }\n                if (s3 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c17(s2, s3);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c16);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeleton() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parsenumberSkeletonToken();\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$parsenumberSkeletonToken();\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c18(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parsenumberArgStyle() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c19) {\n            s1 = peg$c19;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c20);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsenumberSkeleton();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c21(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parsemessageText();\n            if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c22(s1);\n            }\n            s0 = s1;\n        }\n        return s0;\n    }\n    function peg$parsenumberFormatElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c3;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c4);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargName();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c23;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c24);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 6) === peg$c25) {\n                                    s7 = peg$c25;\n                                    peg$currPos += 6;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c26);\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        s9 = peg$currPos;\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s10 = peg$c23;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s10 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c24);\n                                            }\n                                        }\n                                        if (s10 !== peg$FAILED) {\n                                            s11 = peg$parse_();\n                                            if (s11 !== peg$FAILED) {\n                                                s12 = peg$parsenumberArgStyle();\n                                                if (s12 !== peg$FAILED) {\n                                                    s10 = [s10, s11, s12];\n                                                    s9 = s10;\n                                                }\n                                                else {\n                                                    peg$currPos = s9;\n                                                    s9 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s9;\n                                                s9 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s9;\n                                            s9 = peg$FAILED;\n                                        }\n                                        if (s9 === peg$FAILED) {\n                                            s9 = null;\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                if (input.charCodeAt(peg$currPos) === 125) {\n                                                    s11 = peg$c5;\n                                                    peg$currPos++;\n                                                }\n                                                else {\n                                                    s11 = peg$FAILED;\n                                                    if (peg$silentFails === 0) {\n                                                        peg$fail(peg$c6);\n                                                    }\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    peg$savedPos = s0;\n                                                    s1 = peg$c27(s3, s7, s9);\n                                                    s0 = s1;\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsedateOrTimeSkeleton() {\n        var s0, s1;\n        s0 = peg$currPos;\n        s1 = peg$parsemessageText();\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c28(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parsedateOrTimeArgStyle() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c19) {\n            s1 = peg$c19;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c20);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsedateOrTimeSkeleton();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c21(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parsemessageText();\n            if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c22(s1);\n            }\n            s0 = s1;\n        }\n        return s0;\n    }\n    function peg$parsedateOrTimeFormatElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c3;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c4);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargName();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c23;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c24);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 4) === peg$c29) {\n                                    s7 = peg$c29;\n                                    peg$currPos += 4;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c30);\n                                    }\n                                }\n                                if (s7 === peg$FAILED) {\n                                    if (input.substr(peg$currPos, 4) === peg$c31) {\n                                        s7 = peg$c31;\n                                        peg$currPos += 4;\n                                    }\n                                    else {\n                                        s7 = peg$FAILED;\n                                        if (peg$silentFails === 0) {\n                                            peg$fail(peg$c32);\n                                        }\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        s9 = peg$currPos;\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s10 = peg$c23;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s10 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c24);\n                                            }\n                                        }\n                                        if (s10 !== peg$FAILED) {\n                                            s11 = peg$parse_();\n                                            if (s11 !== peg$FAILED) {\n                                                s12 = peg$parsedateOrTimeArgStyle();\n                                                if (s12 !== peg$FAILED) {\n                                                    s10 = [s10, s11, s12];\n                                                    s9 = s10;\n                                                }\n                                                else {\n                                                    peg$currPos = s9;\n                                                    s9 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s9;\n                                                s9 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s9;\n                                            s9 = peg$FAILED;\n                                        }\n                                        if (s9 === peg$FAILED) {\n                                            s9 = null;\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                if (input.charCodeAt(peg$currPos) === 125) {\n                                                    s11 = peg$c5;\n                                                    peg$currPos++;\n                                                }\n                                                else {\n                                                    s11 = peg$FAILED;\n                                                    if (peg$silentFails === 0) {\n                                                        peg$fail(peg$c6);\n                                                    }\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    peg$savedPos = s0;\n                                                    s1 = peg$c27(s3, s7, s9);\n                                                    s0 = s1;\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsesimpleFormatElement() {\n        var s0;\n        s0 = peg$parsenumberFormatElement();\n        if (s0 === peg$FAILED) {\n            s0 = peg$parsedateOrTimeFormatElement();\n        }\n        return s0;\n    }\n    function peg$parsepluralElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c3;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c4);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargName();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c23;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c24);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 6) === peg$c33) {\n                                    s7 = peg$c33;\n                                    peg$currPos += 6;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c34);\n                                    }\n                                }\n                                if (s7 === peg$FAILED) {\n                                    if (input.substr(peg$currPos, 13) === peg$c35) {\n                                        s7 = peg$c35;\n                                        peg$currPos += 13;\n                                    }\n                                    else {\n                                        s7 = peg$FAILED;\n                                        if (peg$silentFails === 0) {\n                                            peg$fail(peg$c36);\n                                        }\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s9 = peg$c23;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s9 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c24);\n                                            }\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                s11 = peg$currPos;\n                                                if (input.substr(peg$currPos, 7) === peg$c37) {\n                                                    s12 = peg$c37;\n                                                    peg$currPos += 7;\n                                                }\n                                                else {\n                                                    s12 = peg$FAILED;\n                                                    if (peg$silentFails === 0) {\n                                                        peg$fail(peg$c38);\n                                                    }\n                                                }\n                                                if (s12 !== peg$FAILED) {\n                                                    s13 = peg$parse_();\n                                                    if (s13 !== peg$FAILED) {\n                                                        s14 = peg$parsenumber();\n                                                        if (s14 !== peg$FAILED) {\n                                                            s12 = [s12, s13, s14];\n                                                            s11 = s12;\n                                                        }\n                                                        else {\n                                                            peg$currPos = s11;\n                                                            s11 = peg$FAILED;\n                                                        }\n                                                    }\n                                                    else {\n                                                        peg$currPos = s11;\n                                                        s11 = peg$FAILED;\n                                                    }\n                                                }\n                                                else {\n                                                    peg$currPos = s11;\n                                                    s11 = peg$FAILED;\n                                                }\n                                                if (s11 === peg$FAILED) {\n                                                    s11 = null;\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    s12 = peg$parse_();\n                                                    if (s12 !== peg$FAILED) {\n                                                        s13 = [];\n                                                        s14 = peg$parsepluralOption();\n                                                        if (s14 !== peg$FAILED) {\n                                                            while (s14 !== peg$FAILED) {\n                                                                s13.push(s14);\n                                                                s14 = peg$parsepluralOption();\n                                                            }\n                                                        }\n                                                        else {\n                                                            s13 = peg$FAILED;\n                                                        }\n                                                        if (s13 !== peg$FAILED) {\n                                                            s14 = peg$parse_();\n                                                            if (s14 !== peg$FAILED) {\n                                                                if (input.charCodeAt(peg$currPos) === 125) {\n                                                                    s15 = peg$c5;\n                                                                    peg$currPos++;\n                                                                }\n                                                                else {\n                                                                    s15 = peg$FAILED;\n                                                                    if (peg$silentFails === 0) {\n                                                                        peg$fail(peg$c6);\n                                                                    }\n                                                                }\n                                                                if (s15 !== peg$FAILED) {\n                                                                    peg$savedPos = s0;\n                                                                    s1 = peg$c39(s3, s7, s11, s13);\n                                                                    s0 = s1;\n                                                                }\n                                                                else {\n                                                                    peg$currPos = s0;\n                                                                    s0 = peg$FAILED;\n                                                                }\n                                                            }\n                                                            else {\n                                                                peg$currPos = s0;\n                                                                s0 = peg$FAILED;\n                                                            }\n                                                        }\n                                                        else {\n                                                            peg$currPos = s0;\n                                                            s0 = peg$FAILED;\n                                                        }\n                                                    }\n                                                    else {\n                                                        peg$currPos = s0;\n                                                        s0 = peg$FAILED;\n                                                    }\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseselectElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c3;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c4);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargName();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c23;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c24);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 6) === peg$c40) {\n                                    s7 = peg$c40;\n                                    peg$currPos += 6;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c41);\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s9 = peg$c23;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s9 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c24);\n                                            }\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                s11 = [];\n                                                s12 = peg$parseselectOption();\n                                                if (s12 !== peg$FAILED) {\n                                                    while (s12 !== peg$FAILED) {\n                                                        s11.push(s12);\n                                                        s12 = peg$parseselectOption();\n                                                    }\n                                                }\n                                                else {\n                                                    s11 = peg$FAILED;\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    s12 = peg$parse_();\n                                                    if (s12 !== peg$FAILED) {\n                                                        if (input.charCodeAt(peg$currPos) === 125) {\n                                                            s13 = peg$c5;\n                                                            peg$currPos++;\n                                                        }\n                                                        else {\n                                                            s13 = peg$FAILED;\n                                                            if (peg$silentFails === 0) {\n                                                                peg$fail(peg$c6);\n                                                            }\n                                                        }\n                                                        if (s13 !== peg$FAILED) {\n                                                            peg$savedPos = s0;\n                                                            s1 = peg$c42(s3, s11);\n                                                            s0 = s1;\n                                                        }\n                                                        else {\n                                                            peg$currPos = s0;\n                                                            s0 = peg$FAILED;\n                                                        }\n                                                    }\n                                                    else {\n                                                        peg$currPos = s0;\n                                                        s0 = peg$FAILED;\n                                                    }\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsepluralRuleSelectValue() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 61) {\n            s2 = peg$c43;\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c44);\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            s3 = peg$parsenumber();\n            if (s3 !== peg$FAILED) {\n                s2 = [s2, s3];\n                s1 = s2;\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$parsekeyword();\n        }\n        return s0;\n    }\n    function peg$parseselectOption() {\n        var s0, s1, s2, s3, s4, s5, s6;\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsekeyword();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parse_();\n                if (s3 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 123) {\n                        s4 = peg$c3;\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c4);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        s5 = peg$parsemessage();\n                        if (s5 !== peg$FAILED) {\n                            if (input.charCodeAt(peg$currPos) === 125) {\n                                s6 = peg$c5;\n                                peg$currPos++;\n                            }\n                            else {\n                                s6 = peg$FAILED;\n                                if (peg$silentFails === 0) {\n                                    peg$fail(peg$c6);\n                                }\n                            }\n                            if (s6 !== peg$FAILED) {\n                                peg$savedPos = s0;\n                                s1 = peg$c45(s2, s5);\n                                s0 = s1;\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsepluralOption() {\n        var s0, s1, s2, s3, s4, s5, s6;\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsepluralRuleSelectValue();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parse_();\n                if (s3 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 123) {\n                        s4 = peg$c3;\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c4);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        s5 = peg$parsemessage();\n                        if (s5 !== peg$FAILED) {\n                            if (input.charCodeAt(peg$currPos) === 125) {\n                                s6 = peg$c5;\n                                peg$currPos++;\n                            }\n                            else {\n                                s6 = peg$FAILED;\n                                if (peg$silentFails === 0) {\n                                    peg$fail(peg$c6);\n                                }\n                            }\n                            if (s6 !== peg$FAILED) {\n                                peg$savedPos = s0;\n                                s1 = peg$c46(s2, s5);\n                                s0 = s1;\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsepatternWhiteSpace() {\n        var s0;\n        if (peg$c47.test(input.charAt(peg$currPos))) {\n            s0 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c48);\n            }\n        }\n        return s0;\n    }\n    function peg$parsepatternSyntax() {\n        var s0;\n        if (peg$c49.test(input.charAt(peg$currPos))) {\n            s0 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c50);\n            }\n        }\n        return s0;\n    }\n    function peg$parse_() {\n        var s0, s1, s2;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parsepatternWhiteSpace();\n        while (s2 !== peg$FAILED) {\n            s1.push(s2);\n            s2 = peg$parsepatternWhiteSpace();\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c51);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumber() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        s1 = [];\n        if (peg$c52.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c53);\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                if (peg$c52.test(input.charAt(peg$currPos))) {\n                    s2 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s2 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c53);\n                    }\n                }\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c54(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parseapostrophe() {\n        var s0, s1;\n        peg$silentFails++;\n        if (input.charCodeAt(peg$currPos) === 39) {\n            s0 = peg$c56;\n            peg$currPos++;\n        }\n        else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c57);\n            }\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c55);\n            }\n        }\n        return s0;\n    }\n    function peg$parsedoubleApostrophes() {\n        var s0, s1;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c59) {\n            s1 = peg$c59;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c60);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c61();\n        }\n        s0 = s1;\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c58);\n            }\n        }\n        return s0;\n    }\n    function peg$parsequotedString() {\n        var s0, s1, s2, s3, s4, s5;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 39) {\n            s1 = peg$c56;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c57);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            if (peg$c62.test(input.charAt(peg$currPos))) {\n                s2 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c63);\n                }\n            }\n            if (s2 !== peg$FAILED) {\n                s3 = peg$currPos;\n                s4 = [];\n                if (input.substr(peg$currPos, 2) === peg$c59) {\n                    s5 = peg$c59;\n                    peg$currPos += 2;\n                }\n                else {\n                    s5 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c60);\n                    }\n                }\n                if (s5 === peg$FAILED) {\n                    if (peg$c64.test(input.charAt(peg$currPos))) {\n                        s5 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s5 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c65);\n                        }\n                    }\n                }\n                while (s5 !== peg$FAILED) {\n                    s4.push(s5);\n                    if (input.substr(peg$currPos, 2) === peg$c59) {\n                        s5 = peg$c59;\n                        peg$currPos += 2;\n                    }\n                    else {\n                        s5 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c60);\n                        }\n                    }\n                    if (s5 === peg$FAILED) {\n                        if (peg$c64.test(input.charAt(peg$currPos))) {\n                            s5 = input.charAt(peg$currPos);\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c65);\n                            }\n                        }\n                    }\n                }\n                if (s4 !== peg$FAILED) {\n                    s3 = input.substring(s3, peg$currPos);\n                }\n                else {\n                    s3 = s4;\n                }\n                if (s3 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 39) {\n                        s4 = peg$c56;\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c57);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c66(s2, s3);\n                        s0 = s1;\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseunquotedString() {\n        var s0, s1;\n        s0 = peg$currPos;\n        if (peg$c67.test(input.charAt(peg$currPos))) {\n            s1 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c68);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        return s0;\n    }\n    function peg$parsekeyword() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parsepatternWhiteSpace();\n        if (s4 === peg$FAILED) {\n            s4 = peg$parsepatternSyntax();\n        }\n        peg$silentFails--;\n        if (s4 === peg$FAILED) {\n            s3 = undefined;\n        }\n        else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c11);\n                }\n            }\n            if (s4 !== peg$FAILED) {\n                s3 = [s3, s4];\n                s2 = s3;\n            }\n            else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$currPos;\n                s3 = peg$currPos;\n                peg$silentFails++;\n                s4 = peg$parsepatternWhiteSpace();\n                if (s4 === peg$FAILED) {\n                    s4 = peg$parsepatternSyntax();\n                }\n                peg$silentFails--;\n                if (s4 === peg$FAILED) {\n                    s3 = undefined;\n                }\n                else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                }\n                if (s3 !== peg$FAILED) {\n                    if (input.length > peg$currPos) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c11);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        s3 = [s3, s4];\n                        s2 = s3;\n                    }\n                    else {\n                        peg$currPos = s2;\n                        s2 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s2;\n                    s2 = peg$FAILED;\n                }\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c69);\n            }\n        }\n        return s0;\n    }\n    function insertLocation() {\n        return options && options.captureLocation ? {\n            location: location()\n        } : {};\n    }\n    peg$result = peg$startRuleFunction();\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n        return peg$result;\n    }\n    else {\n        if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n            peg$fail(peg$endExpectation());\n        }\n        throw peg$buildStructuredError(peg$maxFailExpected, peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null, peg$maxFailPos < input.length\n            ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n            : peg$computeLocation(peg$maxFailPos, peg$maxFailPos));\n    }\n}\nexport var parse = peg$parse;\n","import { isPluralElement, isLiteralElement } from './types';\nimport { parse } from './parser';\nvar PLURAL_HASHTAG_REGEX = /(^|[^\\\\])#/g;\n/**\n * Whether to convert `#` in plural rule options\n * to `{var, number}`\n * @param el AST Element\n * @param pluralStack current plural stack\n */\nexport function normalizeHashtagInPlural(els) {\n    els.forEach(function (el) {\n        // If we're encountering a plural el\n        if (!isPluralElement(el)) {\n            return;\n        }\n        // Go down the options and search for # in any literal element\n        Object.keys(el.options).forEach(function (id) {\n            var _a;\n            var opt = el.options[id];\n            // If we got a match, we have to split this\n            // and inject a NumberElement in the middle\n            var matchingLiteralElIndex = -1;\n            var literalEl = undefined;\n            for (var i = 0; i < opt.value.length; i++) {\n                var el_1 = opt.value[i];\n                if (isLiteralElement(el_1) && PLURAL_HASHTAG_REGEX.test(el_1.value)) {\n                    matchingLiteralElIndex = i;\n                    literalEl = el_1;\n                    break;\n                }\n            }\n            if (literalEl) {\n                var newValue = literalEl.value.replace(PLURAL_HASHTAG_REGEX, \"$1{\" + el.value + \", number}\");\n                var newEls = parse(newValue);\n                (_a = opt.value).splice.apply(_a, [matchingLiteralElIndex, 1].concat(newEls));\n            }\n            normalizeHashtagInPlural(opt.value);\n        });\n    });\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isArgumentElement, isLiteralElement, isDateElement, isTimeElement, isNumberElement, isSelectElement, isPluralElement } from 'intl-messageformat-parser';\nvar ESCAPE_HASH_REGEX = /\\\\#/g;\nvar FormatError = /** @class */ (function (_super) {\n    __extends(FormatError, _super);\n    function FormatError(msg, variableId) {\n        var _this = _super.call(this, msg) || this;\n        _this.variableId = variableId;\n        return _this;\n    }\n    return FormatError;\n}(Error));\nfunction mergeLiteral(parts) {\n    if (parts.length < 2) {\n        return parts;\n    }\n    return parts.reduce(function (all, part) {\n        var lastPart = all[all.length - 1];\n        if (!lastPart ||\n            lastPart.type !== 0 /* literal */ ||\n            part.type !== 0 /* literal */) {\n            all.push(part);\n        }\n        else {\n            lastPart.value += part.value;\n        }\n        return all;\n    }, []);\n}\n// TODO(skeleton): add skeleton support\nexport function formatToParts(els, locales, formatters, formats, values, \n// For debugging\noriginalMessage) {\n    // Hot path for straight simple msg translations\n    if (els.length === 1 && isLiteralElement(els[0])) {\n        return [\n            {\n                type: 0 /* literal */,\n                value: els[0].value.replace(ESCAPE_HASH_REGEX, '#')\n            }\n        ];\n    }\n    var result = [];\n    for (var _i = 0, els_1 = els; _i < els_1.length; _i++) {\n        var el = els_1[_i];\n        // Exit early for string parts.\n        if (isLiteralElement(el)) {\n            result.push({\n                type: 0 /* literal */,\n                value: el.value.replace(ESCAPE_HASH_REGEX, '#')\n            });\n            continue;\n        }\n        var varName = el.value;\n        // Enforce that all required values are provided by the caller.\n        if (!(values && varName in values)) {\n            throw new FormatError(\"The intl string context variable \\\"\" + varName + \"\\\" was not provided to the string \\\"\" + originalMessage + \"\\\"\");\n        }\n        var value = values[varName];\n        if (isArgumentElement(el)) {\n            if (!value || typeof value === 'string' || typeof value === 'number') {\n                result.push({\n                    type: 0 /* literal */,\n                    value: typeof value === 'string' || typeof value === 'number'\n                        ? String(value)\n                        : ''\n                });\n            }\n            else {\n                result.push({\n                    type: 1 /* argument */,\n                    value: value\n                });\n            }\n            continue;\n        }\n        // Recursively format plural and select parts' option — which can be a\n        // nested pattern structure. The choosing of the option to use is\n        // abstracted-by and delegated-to the part helper object.\n        if (isDateElement(el)) {\n            var style = typeof el.style === 'string' ? formats.date[el.style] : undefined;\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getDateTimeFormat(locales, style)\n                    .format(value)\n            });\n            continue;\n        }\n        if (isTimeElement(el)) {\n            var style = typeof el.style === 'string' ? formats.time[el.style] : undefined;\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getDateTimeFormat(locales, style)\n                    .format(value)\n            });\n            continue;\n        }\n        if (isNumberElement(el)) {\n            var style = typeof el.style === 'string' ? formats.number[el.style] : undefined;\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getNumberFormat(locales, style)\n                    .format(value)\n            });\n            continue;\n        }\n        if (isSelectElement(el)) {\n            var opt = el.options[value] || el.options.other;\n            if (!opt) {\n                throw new RangeError(\"Invalid values for \\\"\" + el.value + \"\\\": \\\"\" + value + \"\\\". Options are \\\"\" + Object.keys(el.options).join('\", \"') + \"\\\"\");\n            }\n            result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values));\n            continue;\n        }\n        if (isPluralElement(el)) {\n            var opt = el.options[\"=\" + value];\n            if (!opt) {\n                var rule = formatters\n                    .getPluralRules(locales, { type: el.pluralType })\n                    .select(value - (el.offset || 0));\n                opt = el.options[rule] || el.options.other;\n            }\n            if (!opt) {\n                throw new RangeError(\"Invalid values for \\\"\" + el.value + \"\\\": \\\"\" + value + \"\\\". Options are \\\"\" + Object.keys(el.options).join('\", \"') + \"\\\"\");\n            }\n            result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values));\n            continue;\n        }\n    }\n    return mergeLiteral(result);\n}\nexport function formatToString(els, locales, formatters, formats, values, \n// For debugging\noriginalMessage) {\n    var parts = formatToParts(els, locales, formatters, formats, values, originalMessage);\n    // Hot path for straight simple msg translations\n    if (parts.length === 1) {\n        return parts[0].value;\n    }\n    return parts.reduce(function (all, part) { return (all += part.value); }, '');\n}\n// Singleton\nvar domParser;\nvar TOKEN_DELIMITER = '@@';\nvar TOKEN_REGEX = /@@(.*?)@@/g;\nvar counter = 0;\nfunction generateId() {\n    return Date.now() + \"_\" + ++counter;\n}\nfunction restoreRichPlaceholderMessage(text, objectParts) {\n    return text\n        .split(TOKEN_REGEX)\n        .filter(Boolean)\n        .map(function (c) { return objectParts[c] || c; });\n}\nexport function formatXMLMessage(els, locales, formatters, formats, values, \n// For debugging\noriginalMessage) {\n    var parts = formatToParts(els, locales, formatters, formats, values, originalMessage);\n    var objectParts = {};\n    var formattedMessage = parts.reduce(function (all, part) {\n        if (typeof part.value === 'string' || part.type === 0 /* literal */) {\n            return (all += part.value);\n        }\n        var id = generateId();\n        objectParts[id] = part.value;\n        return (all += \"\" + TOKEN_DELIMITER + id + TOKEN_DELIMITER);\n    }, '');\n    // Not designed to filter out aggressively\n    if (!~formattedMessage.indexOf('<')) {\n        return restoreRichPlaceholderMessage(formattedMessage, objectParts);\n    }\n    if (!values) {\n        throw new FormatError('Message has placeholders but no values was given');\n    }\n    if (typeof DOMParser === 'undefined') {\n        throw new FormatError('Cannot format XML message without DOMParser');\n    }\n    if (!domParser) {\n        domParser = new DOMParser();\n    }\n    // XML, not HTML since HTMl is strict about self-closing tag\n    var dom = domParser.parseFromString(\"<template>\" + formattedMessage + \"</template>\", 'application/xml');\n    if (dom.getElementsByTagName('parsererror').length) {\n        throw new FormatError(\"Malformed XML message \" + dom.getElementsByTagName('parsererror')[0].innerHTML);\n    }\n    var content = dom.firstChild;\n    if (!content) {\n        throw new FormatError(\"Malformed XML message \" + formattedMessage);\n    }\n    var tagsToFormat = Object.keys(values).filter(function (varName) { return !!dom.getElementsByTagName(varName).length; });\n    // No tags to format\n    if (!tagsToFormat.length) {\n        return restoreRichPlaceholderMessage(formattedMessage, objectParts);\n    }\n    var childNodes = Array.prototype.slice.call(content.childNodes);\n    return childNodes.reduce(function (reconstructedChunks, _a) {\n        var tagName = _a.tagName, outerHTML = _a.outerHTML, textContent = _a.textContent;\n        // Regular text\n        if (!tagName) {\n            var chunks = restoreRichPlaceholderMessage(textContent || '', objectParts);\n            return reconstructedChunks.concat(chunks);\n        }\n        // Legacy HTML\n        if (!values[tagName]) {\n            var chunks = restoreRichPlaceholderMessage(outerHTML, objectParts);\n            if (chunks.length === 1) {\n                return reconstructedChunks.concat([chunks[0]]);\n            }\n            return reconstructedChunks.concat(chunks);\n        }\n        // XML Tag replacement\n        var formatFnOrValue = values[tagName];\n        if (typeof formatFnOrValue === 'function') {\n            if (textContent == null) {\n                return reconstructedChunks.concat([\n                    formatFnOrValue(textContent || undefined)\n                ]);\n            }\n            var chunks = restoreRichPlaceholderMessage(textContent, objectParts);\n            return reconstructedChunks.concat([formatFnOrValue.apply(void 0, chunks)]);\n        }\n        return reconstructedChunks.concat([formatFnOrValue]);\n    }, []);\n}\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n// -- Utilities ----------------------------------------------------------------\nfunction getCacheId(inputs) {\n    return JSON.stringify(inputs.map(function (input) {\n        return input && typeof input === 'object' ? orderedProps(input) : input;\n    }));\n}\nfunction orderedProps(obj) {\n    return Object.keys(obj)\n        .sort()\n        .map(function (k) {\n        var _a;\n        return (_a = {}, _a[k] = obj[k], _a);\n    });\n}\nvar memoizeFormatConstructor = function (FormatConstructor, cache) {\n    if (cache === void 0) { cache = {}; }\n    return function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var cacheId = getCacheId(args);\n        var format = cacheId && cache[cacheId];\n        if (!format) {\n            format = new ((_a = FormatConstructor).bind.apply(_a, [void 0].concat(args)))();\n            if (cacheId) {\n                cache[cacheId] = format;\n            }\n        }\n        return format;\n    };\n};\nexport default memoizeFormatConstructor;\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { isArgumentElement, isLiteralElement, isDateElement, isTimeElement, isNumberElement, isSelectElement, isPluralElement } from 'intl-messageformat-parser';\nimport memoizeIntlConstructor from 'intl-format-cache';\nimport { formatToString, formatToParts, formatXMLMessage } from './formatters';\n// -- MessageFormat --------------------------------------------------------\nfunction resolveLocale(locales) {\n    if (typeof locales === 'string') {\n        locales = [locales];\n    }\n    try {\n        return Intl.NumberFormat.supportedLocalesOf(locales, {\n            // IE11 localeMatcher `lookup` seems to convert `en` -> `en-US`\n            // but not other browsers,\n            localeMatcher: 'best fit'\n        })[0];\n    }\n    catch (e) {\n        return IntlMessageFormat.defaultLocale;\n    }\n}\n// TODO(skeleton): add skeleton support\nfunction prewarmFormatters(els, locales, formatters, formats) {\n    els\n        .filter(function (el) { return !isArgumentElement(el) && !isLiteralElement(el); })\n        .forEach(function (el) {\n        // Recursively format plural and select parts' option — which can be a\n        // nested pattern structure. The choosing of the option to use is\n        // abstracted-by and delegated-to the part helper object.\n        if (isDateElement(el)) {\n            var style = typeof el.style === 'string' ? formats.date[el.style] : undefined;\n            formatters.getDateTimeFormat(locales, style);\n        }\n        if (isTimeElement(el)) {\n            var style = typeof el.style === 'string' ? formats.time[el.style] : undefined;\n            formatters.getDateTimeFormat(locales, style);\n        }\n        if (isNumberElement(el)) {\n            var style = typeof el.style === 'string' ? formats.number[el.style] : undefined;\n            formatters.getNumberFormat(locales, style);\n        }\n        if (isSelectElement(el)) {\n            Object.keys(el.options).forEach(function (id) {\n                return prewarmFormatters(el.options[id].value, locales, formatters, formats);\n            });\n        }\n        if (isPluralElement(el)) {\n            formatters.getPluralRules(locales, { type: el.pluralType });\n            Object.keys(el.options).forEach(function (id) {\n                return prewarmFormatters(el.options[id].value, locales, formatters, formats);\n            });\n        }\n    });\n}\nfunction mergeConfig(c1, c2) {\n    if (!c2) {\n        return c1;\n    }\n    return __assign({}, (c1 || {}), (c2 || {}), Object.keys(c1).reduce(function (all, k) {\n        all[k] = __assign({}, c1[k], (c2[k] || {}));\n        return all;\n    }, {}));\n}\nfunction mergeConfigs(defaultConfig, configs) {\n    if (!configs) {\n        return defaultConfig;\n    }\n    return Object.keys(defaultConfig).reduce(function (all, k) {\n        all[k] = mergeConfig(defaultConfig[k], configs[k]);\n        return all;\n    }, __assign({}, defaultConfig));\n}\nexport function createDefaultFormatters(cache) {\n    if (cache === void 0) { cache = {\n        number: {},\n        dateTime: {},\n        pluralRules: {}\n    }; }\n    return {\n        getNumberFormat: memoizeIntlConstructor(Intl.NumberFormat, cache.number),\n        getDateTimeFormat: memoizeIntlConstructor(Intl.DateTimeFormat, cache.dateTime),\n        getPluralRules: memoizeIntlConstructor(Intl.PluralRules, cache.pluralRules)\n    };\n}\nvar IntlMessageFormat = /** @class */ (function () {\n    function IntlMessageFormat(message, locales, overrideFormats, opts) {\n        var _this = this;\n        if (locales === void 0) { locales = IntlMessageFormat.defaultLocale; }\n        this.formatterCache = {\n            number: {},\n            dateTime: {},\n            pluralRules: {}\n        };\n        this.format = function (values) {\n            return formatToString(_this.ast, _this.locale, _this.formatters, _this.formats, values, _this.message);\n        };\n        this.formatToParts = function (values) {\n            return formatToParts(_this.ast, _this.locale, _this.formatters, _this.formats, values, _this.message);\n        };\n        this.formatXMLMessage = function (values) {\n            return formatXMLMessage(_this.ast, _this.locale, _this.formatters, _this.formats, values, _this.message);\n        };\n        this.resolvedOptions = function () { return ({ locale: _this.locale }); };\n        this.getAst = function () { return _this.ast; };\n        if (typeof message === 'string') {\n            this.message = message;\n            if (!IntlMessageFormat.__parse) {\n                throw new TypeError('IntlMessageFormat.__parse must be set to process `message` of type `string`');\n            }\n            // Parse string messages into an AST.\n            this.ast = IntlMessageFormat.__parse(message);\n        }\n        else {\n            this.ast = message;\n        }\n        if (!Array.isArray(this.ast)) {\n            throw new TypeError('A message must be provided as a String or AST.');\n        }\n        // Creates a new object with the specified `formats` merged with the default\n        // formats.\n        this.formats = mergeConfigs(IntlMessageFormat.formats, overrideFormats);\n        // Defined first because it's used to build the format pattern.\n        this.locale = resolveLocale(locales || []);\n        this.formatters =\n            (opts && opts.formatters) || createDefaultFormatters(this.formatterCache);\n        prewarmFormatters(this.ast, this.locale, this.formatters, this.formats);\n    }\n    IntlMessageFormat.defaultLocale = 'en';\n    IntlMessageFormat.__parse = undefined;\n    // Default format options used as the prototype of the `formats` provided to the\n    // constructor. These are used when constructing the internal Intl.NumberFormat\n    // and Intl.DateTimeFormat instances.\n    IntlMessageFormat.formats = {\n        number: {\n            currency: {\n                style: 'currency'\n            },\n            percent: {\n                style: 'percent'\n            }\n        },\n        date: {\n            short: {\n                month: 'numeric',\n                day: 'numeric',\n                year: '2-digit'\n            },\n            medium: {\n                month: 'short',\n                day: 'numeric',\n                year: 'numeric'\n            },\n            long: {\n                month: 'long',\n                day: 'numeric',\n                year: 'numeric'\n            },\n            full: {\n                weekday: 'long',\n                month: 'long',\n                day: 'numeric',\n                year: 'numeric'\n            }\n        },\n        time: {\n            short: {\n                hour: 'numeric',\n                minute: 'numeric'\n            },\n            medium: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric'\n            },\n            long: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                timeZoneName: 'short'\n            },\n            full: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                timeZoneName: 'short'\n            }\n        }\n    };\n    return IntlMessageFormat;\n}());\nexport { IntlMessageFormat };\nexport default IntlMessageFormat;\n","/*\nHTML escaping is the same as React's\n(on purpose.) Therefore, it has the following Copyright and Licensing:\n\nCopyright 2013-2014, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the LICENSE\nfile in the root directory of React's source tree.\n*/\nimport * as React from 'react';\nimport { IntlMessageFormat } from 'intl-messageformat/core';\nimport memoizeIntlConstructor from 'intl-format-cache';\nconst invariant = require('invariant');\nconst ESCAPED_CHARS = {\n    38: '&amp;',\n    62: '&gt;',\n    60: '&lt;',\n    34: '&quot;',\n    39: '&#x27;',\n};\nconst UNSAFE_CHARS_REGEX = /[&><\"']/g;\nexport function escape(str) {\n    return ('' + str).replace(UNSAFE_CHARS_REGEX, match => ESCAPED_CHARS[match.charCodeAt(0)]);\n}\nexport function filterProps(props, whitelist, defaults = {}) {\n    return whitelist.reduce((filtered, name) => {\n        if (props.hasOwnProperty(name)) {\n            filtered[name] = props[name];\n        }\n        else if (defaults.hasOwnProperty(name)) {\n            filtered[name] = defaults[name];\n        }\n        return filtered;\n    }, {});\n}\nexport function invariantIntlContext({ intl } = {}) {\n    invariant(intl, '[React Intl] Could not find required `intl` object. ' +\n        '<IntlProvider> needs to exist in the component ancestry.');\n}\nexport function createError(message, exception) {\n    const eMsg = exception ? `\\n${exception}` : '';\n    return `[React Intl] ${message}${eMsg}`;\n}\nexport function defaultErrorHandler(error) {\n    if (process.env.NODE_ENV !== 'production') {\n        console.error(error);\n    }\n}\nexport const DEFAULT_INTL_CONFIG = {\n    formats: {},\n    messages: {},\n    timeZone: undefined,\n    textComponent: React.Fragment,\n    defaultLocale: 'en',\n    defaultFormats: {},\n    onError: defaultErrorHandler,\n};\nexport function createIntlCache() {\n    return {\n        dateTime: {},\n        number: {},\n        message: {},\n        relativeTime: {},\n        pluralRules: {},\n    };\n}\n/**\n * Create intl formatters and populate cache\n * @param cache explicit cache to prevent leaking memory\n */\nexport function createFormatters(cache = createIntlCache()) {\n    return {\n        getDateTimeFormat: memoizeIntlConstructor(Intl.DateTimeFormat, cache.dateTime),\n        getNumberFormat: memoizeIntlConstructor(Intl.NumberFormat, cache.number),\n        getMessageFormat: memoizeIntlConstructor(IntlMessageFormat, cache.message),\n        getRelativeTimeFormat: memoizeIntlConstructor(Intl.RelativeTimeFormat, cache.relativeTime),\n        getPluralRules: memoizeIntlConstructor(Intl.PluralRules, cache.pluralRules),\n    };\n}\n","import * as React from 'react';\n// Since rollup cannot deal with namespace being a function,\n// this is to interop with TypeScript since `invariant`\n// does not export a default\n// https://github.com/rollup/rollup/issues/1267\nconst hoistNonReactStatics = require('hoist-non-react-statics');\nimport { invariantIntlContext } from '../utils';\nfunction getDisplayName(Component) {\n    return Component.displayName || Component.name || 'Component';\n}\n// TODO: We should provide initial value here\nconst IntlContext = React.createContext(null);\nconst { Consumer: IntlConsumer, Provider: IntlProvider } = IntlContext;\nexport const Provider = IntlProvider;\nexport const Context = IntlContext;\nexport default function injectIntl(WrappedComponent, options) {\n    const { intlPropName = 'intl', forwardRef = false, enforceContext = true } = options || {};\n    const WithIntl = props => {\n        return (React.createElement(IntlConsumer, null, intl => {\n            if (enforceContext) {\n                invariantIntlContext({ intl });\n            }\n            return (React.createElement(WrappedComponent, Object.assign({}, props, {\n                [intlPropName]: intl,\n            }, { ref: forwardRef ? props.forwardedRef : null })));\n        }));\n    };\n    WithIntl.displayName = `injectIntl(${getDisplayName(WrappedComponent)})`;\n    WithIntl.WrappedComponent = WrappedComponent;\n    if (forwardRef) {\n        return hoistNonReactStatics(React.forwardRef((props, ref) => (React.createElement(WithIntl, Object.assign({}, props, { forwardedRef: ref })))), WrappedComponent);\n    }\n    return hoistNonReactStatics(WithIntl, WrappedComponent);\n}\n","import * as React from 'react';\nimport withIntl from './injectIntl';\nexport default function createFormattedComponent(type) {\n    const Component = props => {\n        const { value, children, intl: { [type]: formatFn, textComponent: Text }, } = props;\n        let formattedValue = formatFn(value, props);\n        if (typeof children === 'function') {\n            return children(formattedValue);\n        }\n        if (Text) {\n            return React.createElement(Text, null, formattedValue);\n        }\n        // Work around @types/react where React.FC cannot return string\n        return formattedValue;\n    };\n    Component.displayName =\n        type === 'formatDate'\n            ? 'FormattedDate'\n            : type === 'formatTime'\n                ? 'FormattedTime'\n                : 'FormattedNumber';\n    return {\n        BaseComponent: Component,\n        Component: withIntl(Component),\n    };\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nconst invariant = require('invariant');\nimport { createError, escape, filterProps } from './utils';\nimport { TYPE } from 'intl-messageformat-parser';\nconst DATE_TIME_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'formatMatcher',\n    'timeZone',\n    'hour12',\n    'weekday',\n    'era',\n    'year',\n    'month',\n    'day',\n    'hour',\n    'minute',\n    'second',\n    'timeZoneName',\n];\nconst NUMBER_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'style',\n    'currency',\n    'currencyDisplay',\n    'useGrouping',\n    'minimumIntegerDigits',\n    'minimumFractionDigits',\n    'maximumFractionDigits',\n    'minimumSignificantDigits',\n    'maximumSignificantDigits',\n];\nconst RELATIVE_FORMAT_OPTIONS = [\n    'numeric',\n    'style',\n];\nconst PLURAL_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'type',\n];\nfunction getNamedFormat(formats, type, name, onError) {\n    const formatType = formats && formats[type];\n    let format;\n    if (formatType) {\n        format = formatType[name];\n    }\n    if (format) {\n        return format;\n    }\n    onError(createError(`No ${type} format named: ${name}`));\n}\n/**\n * Escape a raw msg when we run in prod mode\n * https://github.com/formatjs/formatjs/blob/master/packages/intl-messageformat-parser/src/parser.pegjs#L155\n */\nfunction escapeUnformattedMessage(msg) {\n    return msg.replace(/'\\{(.*?)\\}'/g, `{$1}`);\n}\nexport function formatDate({ locale, formats, onError, timeZone, }, state, value, options = {}) {\n    const { format } = options;\n    let date = new Date(value);\n    let defaults = Object.assign({}, (timeZone && { timeZone }), (format && getNamedFormat(formats, 'date', format, onError)));\n    let filteredOptions = filterProps(options, DATE_TIME_FORMAT_OPTIONS, defaults);\n    try {\n        return state.getDateTimeFormat(locale, filteredOptions).format(date);\n    }\n    catch (e) {\n        onError(createError('Error formatting date.', e));\n    }\n    return String(date);\n}\nexport function formatTime({ locale, formats, onError, timeZone, }, state, value, options = {}) {\n    const { format } = options;\n    let date = new Date(value);\n    let defaults = Object.assign({}, (timeZone && { timeZone }), (format && getNamedFormat(formats, 'time', format, onError)));\n    let filteredOptions = filterProps(options, DATE_TIME_FORMAT_OPTIONS, defaults);\n    if (!filteredOptions.hour &&\n        !filteredOptions.minute &&\n        !filteredOptions.second) {\n        // Add default formatting options if hour, minute, or second isn't defined.\n        filteredOptions = Object.assign({}, filteredOptions, { hour: 'numeric', minute: 'numeric' });\n    }\n    try {\n        return state.getDateTimeFormat(locale, filteredOptions).format(date);\n    }\n    catch (e) {\n        onError(createError('Error formatting time.', e));\n    }\n    return String(date);\n}\nexport function formatRelativeTime({ locale, formats, onError, }, state, value, unit = 'second', options = {}) {\n    const { format } = options;\n    let defaults = (!!format && getNamedFormat(formats, 'relative', format, onError)) || {};\n    let filteredOptions = filterProps(options, RELATIVE_FORMAT_OPTIONS, defaults);\n    try {\n        return state\n            .getRelativeTimeFormat(locale, filteredOptions)\n            .format(value, unit);\n    }\n    catch (e) {\n        onError(createError('Error formatting relative time.', e));\n    }\n    return String(value);\n}\nexport function formatNumber({ locale, formats, onError, }, state, value, options = {}) {\n    const { format } = options;\n    let defaults = (format && getNamedFormat(formats, 'number', format, onError)) || {};\n    let filteredOptions = filterProps(options, NUMBER_FORMAT_OPTIONS, defaults);\n    try {\n        return state.getNumberFormat(locale, filteredOptions).format(value);\n    }\n    catch (e) {\n        onError(createError('Error formatting number.', e));\n    }\n    return String(value);\n}\nexport function formatPlural({ locale, onError }, state, value, options = {}) {\n    let filteredOptions = filterProps(options, PLURAL_FORMAT_OPTIONS);\n    try {\n        return state.getPluralRules(locale, filteredOptions).select(value);\n    }\n    catch (e) {\n        onError(createError('Error formatting plural.', e));\n    }\n    return 'other';\n}\nexport function formatMessage({ locale, formats, messages, defaultLocale, defaultFormats, onError, }, state, messageDescriptor = { id: '' }, values = {}) {\n    const { id, defaultMessage } = messageDescriptor;\n    // `id` is a required field of a Message Descriptor.\n    invariant(id, '[React Intl] An `id` must be provided to format a message.');\n    const message = messages && messages[id];\n    const hasValues = Object.keys(values).length > 0;\n    // Avoid expensive message formatting for simple messages without values. In\n    // development messages will always be formatted in case of missing values.\n    if (!hasValues && process.env.NODE_ENV === 'production') {\n        const val = message || defaultMessage || id;\n        if (typeof val === 'string') {\n            return escapeUnformattedMessage(val);\n        }\n        invariant(val.length === 1 && val[0].type === TYPE.literal, 'Message has placeholders but no values was provided');\n        return val[0].value;\n    }\n    let formattedMessageParts = [];\n    if (message) {\n        try {\n            let formatter = state.getMessageFormat(message, locale, formats, {\n                formatters: state,\n            });\n            formattedMessageParts = formatter.formatXMLMessage(values);\n        }\n        catch (e) {\n            onError(createError(`Error formatting message: \"${id}\" for locale: \"${locale}\"` +\n                (defaultMessage ? ', using default message as fallback.' : ''), e));\n        }\n    }\n    else {\n        // This prevents warnings from littering the console in development\n        // when no `messages` are passed into the <IntlProvider> for the\n        // default locale, and a default message is in the source.\n        if (!defaultMessage ||\n            (locale && locale.toLowerCase() !== defaultLocale.toLowerCase())) {\n            onError(createError(`Missing message: \"${id}\" for locale: \"${locale}\"` +\n                (defaultMessage ? ', using default message as fallback.' : '')));\n        }\n    }\n    if (!formattedMessageParts.length && defaultMessage) {\n        try {\n            let formatter = state.getMessageFormat(defaultMessage, defaultLocale, defaultFormats);\n            formattedMessageParts = formatter.formatXMLMessage(values);\n        }\n        catch (e) {\n            onError(createError(`Error formatting the default message for: \"${id}\"`, e));\n        }\n    }\n    if (!formattedMessageParts.length) {\n        onError(createError(`Cannot format message: \"${id}\", ` +\n            `using message ${message || defaultMessage ? 'source' : 'id'} as fallback.`));\n        if (typeof message === 'string') {\n            return message || defaultMessage || id;\n        }\n        return defaultMessage || id;\n    }\n    if (formattedMessageParts.length === 1 &&\n        typeof formattedMessageParts[0] === 'string') {\n        return formattedMessageParts[0] || defaultMessage || id;\n    }\n    return formattedMessageParts;\n}\nexport function formatHTMLMessage(config, state, messageDescriptor = { id: '' }, rawValues = {}) {\n    // Process all the values before they are used when formatting the ICU\n    // Message string. Since the formatted message might be injected via\n    // `innerHTML`, all String-based values need to be HTML-escaped.\n    let escapedValues = Object.keys(rawValues).reduce((escaped, name) => {\n        let value = rawValues[name];\n        escaped[name] = typeof value === 'string' ? escape(value) : value;\n        return escaped;\n    }, {});\n    return formatMessage(config, state, messageDescriptor, escapedValues);\n}\nexport const formatters = {\n    formatNumber,\n    formatDate,\n    formatTime,\n    formatMessage,\n    formatPlural,\n    formatHTMLMessage,\n    formatRelativeTime,\n};\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nvar DEFAULT_CONSTRUCTORS = [\n    Intl.DateTimeFormat,\n    Intl.NumberFormat,\n    Intl.PluralRules\n];\nexport default function areIntlLocalesSupported(locales, constructorsToCheck) {\n    if (constructorsToCheck === void 0) { constructorsToCheck = DEFAULT_CONSTRUCTORS; }\n    if (typeof Intl === 'undefined') {\n        return false;\n    }\n    if (!locales) {\n        throw new Error('locales must be supplied.');\n    }\n    if (!Array.isArray(locales)) {\n        locales = [locales];\n    }\n    var intlConstructors = constructorsToCheck.filter(Boolean);\n    if (intlConstructors.length === 0) {\n        return false;\n    }\n    return intlConstructors.every(function (intlConstructor) {\n        return intlConstructor.supportedLocalesOf(locales).length === locales.length;\n    });\n}\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport { Provider } from './injectIntl';\nimport { createError, DEFAULT_INTL_CONFIG, createFormatters, invariantIntlContext, createIntlCache, } from '../utils';\nimport { formatNumber, formatRelativeTime, formatDate, formatTime, formatPlural, formatHTMLMessage, formatMessage, } from '../format';\nimport areIntlLocalesSupported from 'intl-locales-supported';\nconst shallowEquals = require('shallow-equal/objects');\nexport default class IntlProvider extends React.PureComponent {\n    constructor() {\n        super(...arguments);\n        this.cache = createIntlCache();\n        this.state = {\n            cache: this.cache,\n            intl: undefined,\n            prevProps: {\n                locale: this.props.locale,\n            },\n        };\n    }\n    static getDerivedStateFromProps(props, { prevProps, cache }) {\n        const { locale, timeZone, formats, textComponent, messages, defaultLocale, defaultFormats, onError, } = props;\n        const filteredProps = {\n            locale,\n            timeZone,\n            formats,\n            textComponent,\n            messages,\n            defaultLocale,\n            defaultFormats,\n            onError,\n        };\n        if (!shallowEquals(prevProps, filteredProps)) {\n            return {\n                intl: createIntl(props, cache),\n                prevProps: filteredProps,\n            };\n        }\n        return null;\n    }\n    render() {\n        invariantIntlContext(this.state);\n        return React.createElement(Provider, { value: this.state.intl }, this.props.children);\n    }\n}\nIntlProvider.displayName = 'IntlProvider';\nIntlProvider.defaultProps = DEFAULT_INTL_CONFIG;\n/**\n * Create intl object\n * @param config intl config\n * @param cache cache for formatter instances to prevent memory leak\n */\nexport function createIntl(config, cache) {\n    const formatters = createFormatters(cache);\n    const resolvedConfig = Object.assign({}, DEFAULT_INTL_CONFIG, config);\n    if (!resolvedConfig.locale ||\n        !areIntlLocalesSupported(resolvedConfig.locale)) {\n        const { locale, defaultLocale, onError } = resolvedConfig;\n        if (typeof onError === 'function') {\n            onError(createError(`Missing locale data for locale: \"${locale}\". ` +\n                `Using default locale: \"${defaultLocale}\" as fallback.`));\n        }\n        // Since there's no registered locale data for `locale`, this will\n        // fallback to the `defaultLocale` to make sure things can render.\n        // The `messages` are overridden to the `defaultProps` empty object\n        // to maintain referential equality across re-renders. It's assumed\n        // each <FormattedMessage> contains a `defaultMessage` prop.\n        resolvedConfig.locale = resolvedConfig.defaultLocale || 'en';\n    }\n    return Object.assign({}, resolvedConfig, { formatters, formatNumber: formatNumber.bind(undefined, resolvedConfig, formatters), formatRelativeTime: formatRelativeTime.bind(undefined, resolvedConfig, formatters), formatDate: formatDate.bind(undefined, resolvedConfig, formatters), formatTime: formatTime.bind(undefined, resolvedConfig, formatters), formatPlural: formatPlural.bind(undefined, resolvedConfig, formatters), formatMessage: formatMessage.bind(undefined, resolvedConfig, formatters), formatHTMLMessage: formatHTMLMessage.bind(undefined, resolvedConfig, formatters) });\n}\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport withIntl from './injectIntl';\nconst invariant = require('invariant');\nconst MINUTE = 60;\nconst HOUR = 60 * 60;\nconst DAY = 60 * 60 * 24;\nfunction selectUnit(seconds) {\n    const absValue = Math.abs(seconds);\n    if (absValue < MINUTE) {\n        return 'second';\n    }\n    if (absValue < HOUR) {\n        return 'minute';\n    }\n    if (absValue < DAY) {\n        return 'hour';\n    }\n    return 'day';\n}\nfunction getDurationInSeconds(unit) {\n    switch (unit) {\n        case 'second':\n            return 1;\n        case 'minute':\n            return MINUTE;\n        case 'hour':\n            return HOUR;\n        default:\n            return DAY;\n    }\n}\nfunction valueToSeconds(value, unit) {\n    if (!value) {\n        return 0;\n    }\n    switch (unit) {\n        case 'second':\n            return value;\n        case 'minute':\n            return value * MINUTE;\n        default:\n            return value * HOUR;\n    }\n}\nconst INCREMENTABLE_UNITS = ['second', 'minute', 'hour'];\nfunction canIncrement(unit = 'second') {\n    return INCREMENTABLE_UNITS.includes(unit);\n}\nfunction verifyProps(updateIntervalInSeconds, unit) {\n    invariant(!updateIntervalInSeconds || (updateIntervalInSeconds && canIncrement(unit)), 'Cannot schedule update with unit longer than hour');\n}\nclass FormattedRelativeTime extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        // Public for testing\n        this._updateTimer = null;\n        this.state = {\n            prevUnit: this.props.unit,\n            prevValue: this.props.value,\n            currentValueInSeconds: canIncrement(this.props.unit)\n                ? valueToSeconds(this.props.value, this.props.unit)\n                : 0,\n        };\n        verifyProps(props.updateIntervalInSeconds, props.unit);\n    }\n    scheduleNextUpdate({ updateIntervalInSeconds, unit }, { currentValueInSeconds }) {\n        clearTimeout(this._updateTimer);\n        this._updateTimer = null;\n        // If there's no interval and we cannot increment this unit, do nothing\n        if (!updateIntervalInSeconds || !canIncrement(unit)) {\n            return;\n        }\n        // Figure out the next interesting time\n        const nextValueInSeconds = currentValueInSeconds - updateIntervalInSeconds;\n        const nextUnit = selectUnit(nextValueInSeconds);\n        // We've reached the max auto incrementable unit, don't schedule another update\n        if (nextUnit === 'day') {\n            return;\n        }\n        const unitDuration = getDurationInSeconds(nextUnit);\n        const remainder = nextValueInSeconds % unitDuration;\n        const prevInterestingValueInSeconds = nextValueInSeconds - remainder;\n        const nextInterestingValueInSeconds = prevInterestingValueInSeconds >= currentValueInSeconds\n            ? prevInterestingValueInSeconds - unitDuration\n            : prevInterestingValueInSeconds;\n        const delayInSeconds = Math.abs(nextInterestingValueInSeconds - currentValueInSeconds);\n        this._updateTimer = setTimeout(() => this.setState({\n            currentValueInSeconds: nextInterestingValueInSeconds,\n        }), delayInSeconds * 1e3);\n    }\n    componentDidMount() {\n        this.scheduleNextUpdate(this.props, this.state);\n    }\n    componentDidUpdate() {\n        this.scheduleNextUpdate(this.props, this.state);\n    }\n    componentWillUnmount() {\n        clearTimeout(this._updateTimer);\n        this._updateTimer = null;\n    }\n    static getDerivedStateFromProps(props, state) {\n        if (props.unit !== state.prevUnit || props.value !== state.prevValue) {\n            return {\n                prevValue: props.value,\n                prevUnit: props.unit,\n                currentValueInSeconds: canIncrement(props.unit)\n                    ? valueToSeconds(props.value, props.unit)\n                    : 0,\n            };\n        }\n        return null;\n    }\n    render() {\n        const { formatRelativeTime, textComponent: Text } = this.props.intl;\n        const { children, value, unit, updateIntervalInSeconds } = this.props;\n        const { currentValueInSeconds } = this.state;\n        let currentValue = value || 0;\n        let currentUnit = unit;\n        if (canIncrement(unit) &&\n            currentValueInSeconds &&\n            updateIntervalInSeconds) {\n            currentUnit = selectUnit(currentValueInSeconds);\n            const unitDuration = getDurationInSeconds(currentUnit);\n            currentValue = Math.round(currentValueInSeconds / unitDuration);\n        }\n        const formattedRelativeTime = formatRelativeTime(currentValue, currentUnit, Object.assign({}, this.props));\n        if (typeof children === 'function') {\n            return children(formattedRelativeTime);\n        }\n        if (Text) {\n            return React.createElement(Text, null, formattedRelativeTime);\n        }\n        return formattedRelativeTime;\n    }\n}\nFormattedRelativeTime.defaultProps = {\n    value: 0,\n    unit: 'second',\n};\nexport const BaseFormattedRelativeTime = FormattedRelativeTime;\nexport default withIntl(FormattedRelativeTime);\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport withIntl from './injectIntl';\nconst FormattedPlural = props => {\n    const { value, other, children, intl: { formatPlural, textComponent: Text }, } = props;\n    let pluralCategory = formatPlural(value, props);\n    let formattedPlural = props[pluralCategory] || other;\n    if (typeof children === 'function') {\n        return children(formattedPlural);\n    }\n    if (Text) {\n        return React.createElement(Text, null, formattedPlural);\n    }\n    // Work around @types/react where React.FC cannot return string\n    return formattedPlural;\n};\nFormattedPlural.defaultProps = {\n    type: 'cardinal',\n};\nFormattedPlural.displayName = 'FormattedPlural';\nexport default withIntl(FormattedPlural);\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport * as React from 'react';\nimport withIntl from './injectIntl';\nconst shallowEquals = require('shallow-equal/objects');\nimport { formatMessage as baseFormatMessage } from '../format';\nimport { invariantIntlContext, DEFAULT_INTL_CONFIG, createFormatters, } from '../utils';\nconst defaultFormatMessage = (descriptor, values) => {\n    if (process.env.NODE_ENV !== 'production') {\n        console.error('[React Intl] Could not find required `intl` object. <IntlProvider> needs to exist in the component ancestry. Using default message as fallback.');\n    }\n    return baseFormatMessage(Object.assign({}, DEFAULT_INTL_CONFIG, { locale: 'en' }), createFormatters(), descriptor, values);\n};\nexport class BaseFormattedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n        if (!props.defaultMessage) {\n            invariantIntlContext(props);\n        }\n    }\n    shouldComponentUpdate(nextProps) {\n        const _a = this.props, { values } = _a, otherProps = __rest(_a, [\"values\"]);\n        const { values: nextValues } = nextProps, nextOtherProps = __rest(nextProps, [\"values\"]);\n        return (!shallowEquals(nextValues, values) ||\n            !shallowEquals(otherProps, nextOtherProps));\n    }\n    render() {\n        const { formatMessage = defaultFormatMessage, textComponent: Text = React.Fragment, } = this.props.intl || {};\n        const { id, description, defaultMessage, values, tagName: Component = Text, children, } = this.props;\n        const descriptor = { id, description, defaultMessage };\n        let nodes = formatMessage(descriptor, values);\n        if (!Array.isArray(nodes)) {\n            nodes = [nodes];\n        }\n        if (typeof children === 'function') {\n            return children(...nodes);\n        }\n        if (Component) {\n            // Needs to use `createElement()` instead of JSX, otherwise React will\n            // warn about a missing `key` prop with rich-text message formatting.\n            return React.createElement(Component, null, ...nodes);\n        }\n        return nodes;\n    }\n}\nBaseFormattedMessage.defaultProps = {\n    values: {},\n};\nexport default withIntl(BaseFormattedMessage, { enforceContext: false });\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport withIntl from './injectIntl';\nimport { BaseFormattedMessage } from './message';\nclass FormattedHTMLMessage extends BaseFormattedMessage {\n    render() {\n        const { formatHTMLMessage, textComponent: Text } = this.props.intl;\n        const { id, description, defaultMessage, values: rawValues, \n        // This is bc of TS3.3 doesn't recognize `defaultProps`\n        tagName: Component = Text || 'span', children, } = this.props;\n        let descriptor = { id, description, defaultMessage };\n        let formattedHTMLMessage = formatHTMLMessage(descriptor, rawValues);\n        if (typeof children === 'function') {\n            return children(formattedHTMLMessage);\n        }\n        // Since the message presumably has HTML in it, we need to set\n        // `innerHTML` in order for it to be rendered and not escaped by React.\n        // To be safe, all string prop values were escaped when formatting the\n        // message. It is assumed that the message is not UGC, and came from the\n        // developer making it more like a template.\n        //\n        // Note: There's a perf impact of using this component since there's no\n        // way for React to do its virtual DOM diffing.\n        const html = { __html: formattedHTMLMessage };\n        return React.createElement(Component, { dangerouslySetInnerHTML: html });\n    }\n}\nFormattedHTMLMessage.defaultProps = Object.assign({}, BaseFormattedMessage.defaultProps, { tagName: 'span' });\nexport const BaseFormattedHTMLMessage = FormattedHTMLMessage; // testing purpose only\nexport default withIntl(FormattedHTMLMessage);\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nexport { default as defineMessages } from './define-messages';\nimport createFormattedComponent from './components/createFormattedComponent';\nexport { default as injectIntl, Provider as RawIntlProvider, Context as IntlContext, } from './components/injectIntl';\nexport { default as useIntl } from './components/useIntl';\nexport { default as IntlProvider, createIntl } from './components/provider';\nexport const { Component: FormattedDate } = createFormattedComponent('formatDate');\nexport const { Component: FormattedTime } = createFormattedComponent('formatTime');\nexport const { Component: FormattedNumber } = createFormattedComponent('formatNumber');\nexport { default as FormattedRelativeTime } from './components/relative';\nexport { default as FormattedPlural } from './components/plural';\nexport { default as FormattedMessage } from './components/message';\nexport { default as FormattedHTMLMessage } from './components/html-message';\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport { parse } from 'intl-messageformat-parser';\nimport { IntlMessageFormat } from 'intl-messageformat/core';\nIntlMessageFormat.__parse = parse;\nexport { createIntl, defineMessages, FormattedDate, FormattedHTMLMessage, FormattedMessage, FormattedNumber, FormattedPlural, FormattedRelativeTime, FormattedTime, injectIntl, IntlContext, IntlProvider, RawIntlProvider, useIntl, } from './core';\n","import { parse as pegParse } from './parser';\nimport { normalizeHashtagInPlural } from './normalize';\nexport * from './types';\nexport * from './parser';\nexport { printAST } from './printer';\nexport function parse(input, opts) {\n    var els = pegParse(input, opts);\n    if (!opts || opts.normalizeHashtagInPlural !== false) {\n        normalizeHashtagInPlural(els);\n    }\n    return els;\n}\n","export default function defineMessages(messageDescriptors) {\n    // This simply returns what's passed-in because it's meant to be a hook for\n    // babel-plugin-react-intl.\n    return messageDescriptors;\n}\n","import { useContext } from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nexport default function useIntl() {\n    const intl = useContext(Context);\n    invariantIntlContext({ intl });\n    return intl;\n}\n"],"names":["TYPE","isLiteralElement","el","type","literal","isArgumentElement","argument","isNumberElement","number","isDateElement","date","isTimeElement","time","isSelectElement","select","isPluralElement","plural","extendStatics","_super","__extends","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","SyntaxError","Error","buildMessage","expected","found","hex","ch","charCodeAt","toString","toUpperCase","literalEscape","replace","classEscape","describeExpectation","expectation","text","escapedParts","parts","map","part","isArray","inverted","description","expected1","j","descriptions","sort","slice","join","describeExpected","found1","message","location","_this","name","captureStackTrace","parse","input","options","undefined","peg$result","location1","peg$FAILED","peg$startRuleFunctions","start","peg$parsestart","peg$startRuleFunction","peg$c0","peg$c1","messageText","value","insertLocation","peg$c2","peg$otherExpectation","peg$c3","peg$c4","peg$literalExpectation","peg$c5","peg$c6","peg$c7","peg$c8","peg$c9","peg$c10","peg$classExpectation","peg$c11","peg$c12","peg$c13","peg$c14","peg$c15","option","peg$c16","peg$c17","stem","peg$c18","tokens","peg$c19","peg$c20","peg$c21","skeleton","peg$c22","style","peg$c23","peg$c24","peg$c25","peg$c26","peg$c27","peg$c28","pattern","peg$c29","peg$c30","peg$c31","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","pluralType","offset","reduce","all","_a","id","peg$c40","peg$c41","peg$c42","peg$c43","peg$c44","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","digits","parseInt","peg$c56","peg$c57","peg$c58","peg$c59","peg$c60","peg$c61","peg$c62","peg$c63","peg$c64","peg$c65","peg$c66","escapedChar","quotedChars","peg$c67","peg$c68","peg$c69","peg$currPos","peg$savedPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","text1","ignoreCase","peg$computePosDetails","pos","details","peg$computeLocation","startPos","endPos","startPosDetails","endPosDetails","end","peg$fail","push","peg$parsemessage","s0","s1","peg$parsemessageElement","peg$parsemessageText","peg$parseliteralElement","s2","s3","s5","peg$parse_","peg$parseargName","peg$parseargumentElement","s7","s9","s10","s11","s12","substr","peg$parsenumberSkeletonToken","peg$parsenumberSkeleton","peg$parsenumberArgStyle","peg$parsenumberFormatElement","peg$parsedateOrTimeSkeleton","peg$parsedateOrTimeArgStyle","peg$parsedateOrTimeFormatElement","peg$parsesimpleFormatElement","s13","s14","s15","peg$parsenumber","peg$parsepluralOption","peg$parsepluralElement","peg$parseselectOption","peg$parseselectElement","peg$parsedoubleApostrophes","peg$parsequotedString","peg$parseunquotedString","peg$parsekeyword","substring","peg$parsenumberSkeletonId","s4","peg$parsepatternWhiteSpace","test","charAt","peg$parsenumberSkeletonTokenOption","s6","peg$parsepluralRuleSelectValue","peg$parsepatternSyntax","captureLocation","PLURAL_HASHTAG_REGEX","domParser","ESCAPE_HASH_REGEX","FormatError","msg","variableId","formatToParts","els","locales","formatters","formats","values","originalMessage","result","_i","els_1","varName","String","getDateTimeFormat","format","getNumberFormat","opt","other","RangeError","keys","rule","getPluralRules","lastPart","mergeLiteral","TOKEN_DELIMITER","TOKEN_REGEX","counter","restoreRichPlaceholderMessage","objectParts","split","filter","Boolean","c","formatXMLMessage","formattedMessage","Date","now","indexOf","DOMParser","dom","parseFromString","getElementsByTagName","innerHTML","content","firstChild","childNodes","reconstructedChunks","tagName","outerHTML","textContent","chunks","concat","formatFnOrValue","getCacheId","inputs","JSON","stringify","obj","k","orderedProps","memoizeFormatConstructor","FormatConstructor","cache","args","cacheId","bind","mergeConfigs","defaultConfig","configs","c1","c2","mergeConfig","IntlMessageFormat","defaultLocale","__parse","currency","percent","short","month","day","year","medium","long","full","weekday","hour","minute","second","timeZoneName","overrideFormats","opts","formatterCache","dateTime","pluralRules","formatToString","ast","locale","resolvedOptions","getAst","TypeError","Intl","NumberFormat","supportedLocalesOf","localeMatcher","e","resolveLocale","memoizeIntlConstructor","DateTimeFormat","PluralRules","createDefaultFormatters","prewarmFormatters","forEach","invariant","require","ESCAPED_CHARS","38","62","60","34","39","UNSAFE_CHARS_REGEX","filterProps","props","whitelist","defaults","filtered","invariantIntlContext","intl","createError","exception","DEFAULT_INTL_CONFIG","messages","timeZone","textComponent","React.Fragment","defaultFormats","onError","error","process","env","NODE_ENV","console","createFormatters","relativeTime","getMessageFormat","getRelativeTimeFormat","RelativeTimeFormat","hoistNonReactStatics","IntlContext","React.createContext","IntlConsumer","Provider","Context","injectIntl","WrappedComponent","WithIntl","React.createElement","enforceContext","intlPropName","ref","forwardRef","forwardedRef","_b","_c","_d","displayName","Component","getDisplayName","React.forwardRef","createFormattedComponent","children","formatFn","Text","formattedValue","BaseComponent","withIntl","DATE_TIME_FORMAT_OPTIONS","NUMBER_FORMAT_OPTIONS","RELATIVE_FORMAT_OPTIONS","PLURAL_FORMAT_OPTIONS","getNamedFormat","formatType","formatMessage","state","messageDescriptor","defaultMessage","val","escapeUnformattedMessage","formattedMessageParts","toLowerCase","formatHTMLMessage","config","rawValues","escaped","str","match","escape","DEFAULT_CONSTRUCTORS","shallowEquals","tslib_1.__extends","React.PureComponent","IntlProvider","prevProps","filteredProps","createIntl","resolvedConfig","constructorsToCheck","intlConstructors","every","intlConstructor","areIntlLocalesSupported","formatNumber","filteredOptions","formatRelativeTime","unit","formatDate","formatTime","formatPlural","defaultProps","MINUTE","HOUR","selectUnit","seconds","absValue","Math","abs","getDurationInSeconds","valueToSeconds","INCREMENTABLE_UNITS","canIncrement","includes","FormattedRelativeTime","updateIntervalInSeconds","currentValueInSeconds","clearTimeout","_updateTimer","nextValueInSeconds","nextUnit","unitDuration","prevInterestingValueInSeconds","nextInterestingValueInSeconds","delayInSeconds","setTimeout","setState","scheduleNextUpdate","prevUnit","prevValue","currentValue","currentUnit","round","formattedRelativeTime","verifyProps","FormattedPlural","formattedPlural","defaultFormatMessage","descriptor","baseFormatMessage","__rest","getOwnPropertySymbols","React.Component","BaseFormattedMessage","nextProps","otherProps","nextValues","nextOtherProps","_e","_f","nodes","React","FormattedHTMLMessage","formattedHTMLMessage","html","__html","dangerouslySetInnerHTML","FormattedDate","FormattedTime","FormattedNumber","pegParse","normalizeHashtagInPlural","matchingLiteralElIndex","literalEl","el_1","newValue","newEls","splice","messageDescriptors","useContext"],"mappings":"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"}